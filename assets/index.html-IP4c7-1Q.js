import{_ as l,c as i,o as e,a as t}from"./app-BsmYACjM.js";const o={},s=t('<h2 id="前端工程化" tabindex="-1"><a class="header-anchor" href="#前端工程化"><span>前端工程化</span></a></h2><p>学习资料</p><ul><li>https://segmentfault.com/a/1190000023943703</li><li>https://juejin.cn/post/6917447582985748493</li></ul><p>前端工程化的主要目标就是解放生产力、提高生产效率，让前端开发者更多地时间聚焦在写代码这件事情上。通过制定一系列的规范和工作流。借助工具和框架解决前端开发和部署上线以及前后端协作过程中的痛点和难度问题。</p><p>典型的前端工作流分为 5 个步骤：</p><ol><li>开发 <ol><li>前端框架：插件化（jQuery） -&gt; 模块化（RequireJS） -&gt; 组件化（React）</li><li>规范化：正所谓无规矩不成方圆，一些好的规范则能很好的帮助我们对项目进行良好的开发管理。规范化指的是我们在工程开发初期以及开发期间制定的系列规范，其中又包含了 <ul><li>项目目录结构</li><li>编码规范：对于编码这块的约束，一般我们都会采用一些强制措施，比如 ESLint、StyleLint 等。</li><li>联调规范：这块可参考我以前知乎的回答，前后端分离，后台返回的数据前端没法写，怎么办？</li><li>文件命名规范</li><li>样式管理规范：目前流行的样式管理有 BEM、Sass、Less、Stylus、CSS Modules 等方式。 git flow 工作流：其中包含分支命名规范、代码合并规范等。</li><li>定期 code review</li></ul></li><li>模块化：将一个文件拆分成多个相互依赖的文件，最后进行统一的打包和加载，这样能够很好的保证高效的多人协作。其中包含 <ul><li>JS 模块化：CommonJS、AMD、CMD 以及 ES6 Module。</li><li>CSS 模块化：Sass、Less、Stylus、BEM、CSS Modules 等。其中预处理器和 BEM 都会有的一个问题就是样式覆盖。而 CSS Modules 则是通过 JS 来管理依赖，最大化的结合了 JS 模块化和 CSS 生态，比如 Vue 中的 style scoped。</li><li>资源模块化：任何资源都能以模块的形式进行加载，目前大部分项目中的文件、CSS、图片等都能直接通过 JS 做统一的依赖关系处理。</li></ul></li><li>组件化：不同于模块化，模块化是对文件、对代码和资源拆分，而组件化则是对 UI 层面的拆分。 <ul><li>通常，我们会需要对页面进行拆分，将其拆分成一个一个的零件，然后分别去实现这一个个零件，最后再进行组装。</li><li>在我们的实际业务开发中，对于组件的拆分我们需要做不同程度的考量，其中主要包括细粒度和通用性这两块的考虑。</li><li>对于业务组件，你更多需要考量的是针对你负责业务线的一个适用度，即你设计的业务组件是否成为你当前业务的 “通用” 组件，比如我之前分析过的权限校验组件，它就是一个典型的业务组件。</li></ul></li></ol></li><li>测试 <ol><li>自动化测试 CI/CD</li></ol></li><li>构建 <ol><li>构建工具：任务化（grunt/gulp） -&gt; 系统化（webpack）</li></ol></li><li>部署 <ol><li>CI/CD 脚本</li><li>制品存放 af</li></ol></li><li>监控</li></ol>',6),a=[s];function n(c,u){return e(),i("div",null,a)}const r=l(o,[["render",n],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/%E5%B7%A5%E7%A8%8B%E5%8C%96/","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"前端工程化","slug":"前端工程化","link":"#前端工程化","children":[]}],"git":{"updatedTime":1717633708000,"contributors":[{"name":"liujia6","email":"liujia11@qianxin.com","commits":1}]},"filePathRelative":"工程化/README.md"}');export{r as comp,d as data};
