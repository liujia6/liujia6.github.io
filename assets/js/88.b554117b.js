(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{490:function(t,s,a){"use strict";a.r(s);var n=a(22),v=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"重构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重构"}},[t._v("#")]),t._v(" 重构")]),t._v(" "),a("p",[t._v("是什么： 使用一系列重构手法，在不改变软件可观察行为的前提下调整结构")]),t._v(" "),a("ol",[a("li",[t._v("好代码的检验标准就是人们是否能轻而易举地修改它")])]),t._v(" "),a("h2",{attrs:{id:"代码的坏味道"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码的坏味道"}},[t._v("#")]),t._v(" 代码的坏味道")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("命名")])]),t._v(" "),a("li",[a("p",[t._v("重复代码")])]),t._v(" "),a("li",[a("p",[t._v("过长函数")])]),t._v(" "),a("li",[a("p",[t._v("过长参数列表")])]),t._v(" "),a("li",[a("p",[t._v("全局数据：代码的任何一个地方都可以改变它，并且探测不到它在哪里有改变")]),t._v(" "),a("ul",[a("li",[t._v("封装函数修改变量，可以知道哪里修改了改变量，可以封装一个类")])])]),t._v(" "),a("li",[a("p",[t._v("可变数据")]),t._v(" "),a("ul",[a("li",[t._v("函数式编程\n"),a("ul",[a("li",[t._v("如果要更新一个数据，就 i 返回一个新的数据副本，旧的数据保持不变")])])]),t._v(" "),a("li",[t._v("如果一个变量在不同时候用于存储不用的东西，则可以使用"),a("code",[t._v("拆分变量")]),t._v("将其拆分为各自不同用途的变量，避免危险的更新操作")])])]),t._v(" "),a("li",[a("p",[t._v("发散式变化")]),t._v(" "),a("ul",[a("li",[t._v("每次只关心一个上下文，也即：一个逻辑只涉及一个地方。修改一个逻辑的时候不需要了解其他的逻辑。每次只关心一个。")]),t._v(" "),a("li",[t._v("修改：使用拆分阶段或者搬移函数拆分开来")])])]),t._v(" "),a("li",[a("p",[t._v("散弹式修改")]),t._v(" "),a("ul",[a("li",[t._v("与发散式变化相反。一个逻辑修改需要在许多不同的类或者函数中修改：即拆分的太细了")]),t._v(" "),a("li",[t._v("修改：去除多余的函数或者类，内联函数，内联类")])])]),t._v(" "),a("li",[a("p",[t._v("依恋情结")]),t._v(" "),a("ul",[a("li",[t._v("模块之间的交互比模块内的交互多")]),t._v(" "),a("li",[t._v("修改：将总是一起变化的东西放在一块。数据和引用这些数据的行为总是一起变化的")])])]),t._v(" "),a("li",[a("p",[t._v("数据泥团")]),t._v(" "),a("ul",[a("li",[t._v("总是有一组经常出现的数据，都拆分了")]),t._v(" "),a("li",[t._v("修改：将它们用对象包装起来 page、size => list:{ page,size }")])])]),t._v(" "),a("li",[a("p",[t._v("基本类型偏执")])]),t._v(" "),a("li",[a("p",[t._v("重复的 switch")]),t._v(" "),a("ul",[a("li",[t._v("当你想增加一个选择分支时，必须找到所有的 switch，并逐一更新。")]),t._v(" "),a("li",[t._v("修改：以多态取代条件表达式")])])]),t._v(" "),a("li",[a("p",[t._v("循环语句")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("修改：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("使用管道取代循环")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" loopItems "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lines\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("line")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" line"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("trim "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("line")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" line"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取代循环中的各种判断和操作")]),t._v("\n")])])])])])])])]),t._v(" "),a("li",[a("p",[t._v("赘余的元素")]),t._v(" "),a("ul",[a("li",[t._v("没必要的类")])])]),t._v(" "),a("li",[a("p",[t._v("夸夸其谈通用性")]),t._v(" "),a("ul",[a("li",[t._v("为没必要的扩展性考虑，添加没必要的处理")])])]),t._v(" "),a("li",[a("p",[t._v("临时字段")])]),t._v(" "),a("li",[a("p",[t._v("过长的消息链")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("用户向一个对象请求另一个对象，再向后者请求另一个对象，然后再。。。")])]),t._v(" "),a("li",[a("p",[t._v("修改：隐藏委托关系")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("manager "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" aPerson"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("department"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("manager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => manager = aPerson.manager")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// aPerson.manager = aPerson.departmant.manager")]),t._v("\n")])])])])])]),t._v(" "),a("li",[a("p",[t._v("中间人")]),t._v(" "),a("ul",[a("li",[t._v("过分运用委托，中间人不干实事")]),t._v(" "),a("li",[t._v("修改：移除中间人，使用内联函数")])])]),t._v(" "),a("li",[a("p",[t._v("内幕交易")]),t._v(" "),a("ul",[a("li",[t._v("模块之间大量交换数据")]),t._v(" "),a("li",[t._v("修改：\n"),a("ul",[a("li",[t._v("搬移需要的函数、字段到模块")]),t._v(" "),a("li",[t._v("提炼类、中间人、隐藏委托关系")])])])])]),t._v(" "),a("li",[a("p",[t._v("过大的类")])]),t._v(" "),a("li",[a("p",[t._v("异曲同工的类")])]),t._v(" "),a("li",[a("p",[t._v("纯数据类")]),t._v(" "),a("ul",[a("li",[t._v("类只是作为控制访问读写某些字段的函数，数据容器")])])])])])}),[],!1,null,null,null);s.default=v.exports}}]);