(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{477:function(t,s,a){"use strict";a.r(s);var e=a(22),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ansible"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ansible"}},[t._v("#")]),t._v(" ansible")]),t._v(" "),a("h2",{attrs:{id:"ansible-到底解决了什么问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ansible-到底解决了什么问题"}},[t._v("#")]),t._v(" Ansible 到底解决了什么问题？")]),t._v(" "),a("p",[t._v("使用 ansible 可以实现多个对主机执行自动化任务操作，使用 yml 配置文件")]),t._v(" "),a("ul",[a("li",[t._v("自动化：避免运维工作中重复的工作，以及人的不确定性问题")]),t._v(" "),a("li",[t._v("模块化：手工写 shell，甚至手工写 python，要做到模块化和标准化，太困难了。Ansible 将大部分运维工作都抽象并标准化成一个个模块（module）。")]),t._v(" "),a("li",[t._v("标准化：所有的模块的使用方式都是一样的，减少学习成本")]),t._v(" "),a("li",[t._v("幂等的. 采用声明式的描述方式，无论被执行了多少次结果都应该是我们所声明的。")])]),t._v(" "),a("h2",{attrs:{id:"ansible-提供两种方式去完成任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ansible-提供两种方式去完成任务"}},[t._v("#")]),t._v(" Ansible 提供两种方式去完成任务")]),t._v(" "),a("ol",[a("li",[t._v("ad-hoc 命令，如果我们敲入一些命令去比较快的完成一些事情,而不需要将这些执行的命令特别保存下来, 这样的命令就叫做 ad-hoc 命令.\n->"),a("a",{attrs:{href:"http://einverne.github.io/post/2020/05/ansible-introduction.html#module",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考链接"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("写 Ansible playbook.")])]),t._v(" "),a("p",[t._v("前者可以解决一些简单的任务, 后者解决较复杂的任务.")]),t._v(" "),a("h2",{attrs:{id:"host-文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#host-文件"}},[t._v("#")]),t._v(" host 文件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("[${branch}]\n${hostIp} ansible_connection=ssh ansible_ssh_user=${user} ansible_ssh_pass=${pass}\n\n")])])]),a("ul",[a("li",[t._v("参数")])]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[t._v("ansible_ssh_host  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将要连接的远程主机名.与你想要设定的主机的别名不同的话,可通过此变量设置.")]),t._v("\nansible_ssh_port  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ssh端口号.如果不是默认的端口号,通过此变量设置.")]),t._v("\nansible_ssh_user  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#默认的 ssh 用户名")]),t._v("\nansible_ssh_pass   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ssh 密码(这种方式并不安全,我们强烈建议使用 --ask-pass 或 SSH 密钥)")]),t._v("\nansible_sudo_pass  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sudo 密码(这种方式并不安全,我们强烈建议使用 --ask-sudo-pass)")]),t._v("\nansible_sudo_exe (new in version 1.8) "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#sudo 命令路径(适用于1.8及以上版本)")]),t._v("\nansible_connection "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 与主机的连接类型.比如:local, ssh 或者 paramiko. Ansible 1.2 以前默认使用 paramiko.1.2 以后默认使用 'smart','smart' 方式会根据是否支持 ControlPersist, 来判断'ssh' 方式是否可行.")]),t._v("\nansible_ssh_private_key_file  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ssh 使用的私钥文件.适用于有多个密钥,而你不想使用 SSH 代理的情况.")]),t._v("\nansible_shell_type "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#目标系统的shell类型.默认情况下,命令的执行使用 'sh' 语法,可设置为 'csh' 或 'fish'.")]),t._v("\n")])])]),a("h2",{attrs:{id:"编写-playbook"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编写-playbook"}},[t._v("#")]),t._v(" 编写 Playbook")]),t._v(" "),a("p",[t._v("运维管理就是一场表演，入口文件就是导演，它规定了演员是谁、出演什么角色、到哪表演；任务列表就是角色的剧本，每一条任务就是一句台词。")]),t._v(" "),a("ul",[a("li",[t._v("导演的职责：编写入口文件的内容")]),t._v(" "),a("li",[t._v("角色的职责：playbook 的具体操作逻辑都是由角色来实现的，在规范中对于角色目录下的内容都有明确定义，最常见的就是 files、tasks、templates、vars 四个文件夹，其中 tasks 就是存放剧本的位置，其他文件夹都是表演中使用的道具。")])]),t._v(" "),a("p",[t._v("术语解释")]),t._v(" "),a("ul",[a("li",[t._v("Hosts 执行的远程主机列表")]),t._v(" "),a("li",[t._v("files： 存放文件，这里的文件不经过任何变化直接复制到被控主机。通常 files 目录用来存放程序的安装包文件，由 copy 模块操作。")]),t._v(" "),a("li",[t._v("tasks：yml 格式定义任务列表，playbook 执行后会按入口文件定义的顺序依次执行角色文件夹内 main.yml 文件。")]),t._v(" "),a("li",[t._v("templates：文件夹内存放模板文件，模板文件以 JinJa2 格式编写的，执行时会将相应变量替换成真正内容后，再复制到被控主机。通常 templates 目录用来存放软件的配置文件、辅助文件，对需要动态调整的内容以参数替换形成模板，由 template 模块操作。")]),t._v(" "),a("li",[t._v("vars：文件夹内存放以 yml 格式定义参数文件，playbook 查找参数时会默认搜索 vars 目录下 main.yml 文件。")]),t._v(" "),a("li",[t._v("Handlers 和 notity 结合使用: 作为触发条件")]),t._v(" "),a("li",[t._v("tags 标签，指定某条任务执行，用于选择运行 playbook 中的部分代码。")])]),t._v(" "),a("p",[t._v("roles 标准目录")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[t._v("├── defaults\n│   └── main.yml\n├── files\n│   └── nginx.tar.gz\n├── handlers  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 被动触发的任务")]),t._v("\n│   └── main.yml\n├── tasks     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 被动的执行任务")]),t._v("\n│   ├── config.yml\n│   └── main.yml\n└── templates   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 存放不同的配置文件")]),t._v("\n    └── nginx.conf\n")])])]),a("h3",{attrs:{id:"options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" options")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('// 参数-e传入变量，这样传入的变量在整个playbook中都可以被调用，属于全局变量\nansible-playbook ansible.yaml -e "HOST=${HOST}" -i ./hosts\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("playbook命令的详细语法如下：\n    ansible-playbook [options] playbook.yml [playbook2 ...]\n    -u REMOTE_USER, --user=REMOTE_USER ＃ ssh 连接的用户名\n    -k, --ask-pass ＃ssh登录认证密码\n    -s, --sudo ＃sudo 到root用户，相当于Linux系统下的sudo命令\n    -U SUDO_USER, --sudo-user=SUDO_USER ＃sudo 到对应的用户\n    -K, --ask-sudo-pass ＃用户的密码（—sudo时使用）\n    -T TIMEOUT, --timeout=TIMEOUT ＃ ssh 连接超时，默认 10 秒\n    -C, --check ＃ 指定该参数后，执行 playbook 文件不会真正去执行，而是模拟执行一遍，然后输出本次执行会对远程主机造成的修改\n    -e EXTRA_VARS, --extra-vars=EXTRA_VARS ＃ 设置额外的变量如：key=value 形式 或者 YAML or JSON，以空格分隔变量，或用多个-e -f FORKS, --forks=FORKS ＃ 进程并发处理，默认 5\n    -i INVENTORY, --inventory-file=INVENTORY ＃ 指定 hosts 文件路径，默认 default=/etc/ansible/hosts\n    -l SUBSET, --limit=SUBSET ＃ 指定一个 pattern，对- hosts:匹配到的主机再过滤一次 --list-hosts ＃ 只打印有哪些主机会执行这个 playbook 文件，不是实际执行该 playbook --list-tasks ＃ 列出该 playbook 中会被执行的 task --private-key=PRIVATE_KEY_FILE ＃ 私钥路径 --step ＃ 同一时间只执行一个 task，每个 task 执行前都会提示确认一遍 --syntax-check ＃ 只检测 playbook 文件语法是否有问题，不会执行该 playbook\n    -t TAGS, --tags=TAGS ＃当 play 和 task 的 tag 为该参数指定的值时才执行，多个 tag 以逗号分隔 --skip-tags=SKIP_TAGS ＃ 当 play 和 task 的 tag 不匹配该参数指定的值时，才执行\n    -v, --verbose ＃输出更详细的执行过程信息，-vvv可得到所有执行过程信息。\n")])])]),a("h3",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("p",[t._v("ansible 配合 gitlab-ci 实现推服务器示例")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' echo \\"$'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("HOST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v('\\" ansible_ssh_user=$'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("USER"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" ansible_ssh_pass=$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("PASS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" ansible_ssh_host=$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("HOST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" hosts\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" echo ansible"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("playbook ansible.yaml "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("e hosts=$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("HOST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("i ./hosts\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ansible"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("playbook ansible.yaml "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('e "HOST=$'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("HOST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  DEST_PATH=$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("ROOT_PATH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("MICROAPP_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" ROOT_PATH=$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("ROOT_PATH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" FILE_NAME=$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("FILE_NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v('" '),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("i ./hosts\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" rm "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("f hosts\n")])])]),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat user.yml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" create user\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hosts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" all\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root\n  sudo_yes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("yes\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("gather_facts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#gather_facts参数指定了在以下任务部分执行前，是否先执行setup模块获取主机相关信息，这在后面的task会使用到setup获取的信息时用到；")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("vars")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tasks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" create  user\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(' name="'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" user "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v('"\n')])])]),a("h2",{attrs:{id:"ansible-常用模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ansible-常用模块"}},[t._v("#")]),t._v(" Ansible 常用模块")]),t._v(" "),a("h3",{attrs:{id:"shell-模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shell-模块"}},[t._v("#")]),t._v(" shell 模块")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("参数")]),t._v(" "),a("th",[t._v("解释")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("chdir")]),t._v(" "),a("td",[t._v("运行 command 命令前先 cd 到这个目录")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("creates")]),t._v(" "),a("td",[t._v("如果这个参数对应的文件存在，就不运行 command")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("executable")]),t._v(" "),a("td",[t._v("将 shell 切换为 command 执行，这里的所有命令需要使用绝对路径")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("removes")]),t._v(" "),a("td",[t._v("如果这个参数对应的文件"),a("strong",[t._v("不存在")]),t._v("，就"),a("strong",[t._v("不运行 command")])]),t._v(" "),a("td")])])]),t._v(" "),a("h3",{attrs:{id:"file-模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-模块"}},[t._v("#")]),t._v(" file "),a("a",{attrs:{href:"https://hoxis.github.io/ansible-files-modules-file.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("模块"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("设置文件夹的权限是非常常见的操作，所以就有了 file 任务。")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ensure folder /app/nginx is created'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/app/nginx'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("owner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nginx'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#owner：指定文件的所属用户。")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("group")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nginx'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# group：指定文件的所属用户组。")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0700'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("state")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'directory'")]),t._v("\n")])])]),a("ul",[a("li",[t._v("state 属性的值可以为：\n"),a("ul",[a("li",[t._v("absent：不存在。可以理解为删除该文件或文件夹。")]),t._v(" "),a("li",[t._v("directory：文件夹。如果该文件夹不存在，则创建。")]),t._v(" "),a("li",[t._v("file：文件。如果不存在，则创建。")]),t._v(" "),a("li",[t._v("touch：与 linux 的 touch 实现相同的效果。")])])])]),t._v(" "),a("h3",{attrs:{id:"service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#service"}},[t._v("#")]),t._v(" Service")]),t._v(" "),a("p",[t._v("在服务安装完成后，最常用的操作就是启动服务了。同时，它会根据不同的操作决定使用何种 service 实现。支持：BSD init, OpenRC, SysV, Solaris SMF, systemd, upstart。这就是封装的强大。用户只需要描述他的期望，剩下的机器能解决的，都由机器解决。")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ensure svn service started\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" svnserver\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("state")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" started\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),a("p",[t._v("enabled 属性值为 true 代表开机自动启动。state 属性值可以为：")]),t._v(" "),a("ul",[a("li",[t._v("reloaded：服务是被重新加载过的。")]),t._v(" "),a("li",[t._v("restarted：服务是被重启过的。")]),t._v(" "),a("li",[t._v("started：服务是启动的。")]),t._v(" "),a("li",[t._v("stopped：服务是停止的。")])]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" deploy\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hosts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{{ HOST }}'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tasks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" delete dir\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{{ DEST_PATH }}'")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("state")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absent\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" unarchive file\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("unarchive")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{{ FILE_NAME }}'")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{{ ROOT_PATH }}'")]),t._v("\n")])])]),a("h3",{attrs:{id:"unarchive-模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unarchive-模块"}},[t._v("#")]),t._v(" unarchive 模块")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("copy")]),t._v(" "),a("th",[t._v("no")]),t._v(" "),a("th",[t._v("yes")]),t._v(" "),a("th",[t._v("yes/no")]),t._v(" "),a("th",[t._v("在解压文件之前，是否先将文件复制到远程主机，默认为 yes。若为 no，则要求目标主机上压缩包必须存在。")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("creates")]),t._v(" "),a("td",[t._v("yes")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("指定一个文件名，当该文件存在时，则解压指令不执行")])]),t._v(" "),a("tr",[a("td",[t._v("dest")]),t._v(" "),a("td",[t._v("yes")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("远程主机上的一个路径，即文件解压的路径")])]),t._v(" "),a("tr",[a("td",[t._v("grop")]),t._v(" "),a("td",[t._v("no")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("解压后的目录或文件的属组")])]),t._v(" "),a("tr",[a("td",[t._v("list_files")]),t._v(" "),a("td",[t._v("no")]),t._v(" "),a("td",[t._v("no")]),t._v(" "),a("td",[t._v("yes/no")]),t._v(" "),a("td",[t._v("如果为 yes，则会列出压缩包里的文件，默认为 no，2.0 版本新增的选项")])]),t._v(" "),a("tr",[a("td",[t._v("mode")]),t._v(" "),a("td",[t._v("no")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("解压后文件的权限")])]),t._v(" "),a("tr",[a("td",[t._v("src")]),t._v(" "),a("td",[t._v("no")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("如果 copy 为 yes，则需要指定压缩文件的源路径")])]),t._v(" "),a("tr",[a("td",[t._v("owner")]),t._v(" "),a("td",[t._v("no")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("解压后文件或目录的属主")])])])]),t._v(" "),a("h3",{attrs:{id:"yum-模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yum-模块"}},[t._v("#")]),t._v(" Yum 模块")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("参数名")])]),t._v(" "),a("th",[a("strong",[t._v("是否必须")])]),t._v(" "),a("th",[a("strong",[t._v("默认值")])]),t._v(" "),a("th",[a("strong",[t._v("选项值")])]),t._v(" "),a("th",[a("strong",[t._v("参数说明")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("conf_file")]),t._v(" "),a("td",[t._v("no")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("设定远程 yum 执行时所依赖的 yum 配置文件")])]),t._v(" "),a("tr",[a("td",[t._v("disable_gpg_check")]),t._v(" "),a("td",[t._v("no")]),t._v(" "),a("td",[t._v("no")]),t._v(" "),a("td",[t._v("yes/no")]),t._v(" "),a("td",[t._v("在安装包前检查包，只会影响 state 参数为"),a("em",[t._v("present")]),t._v("或者"),a("em",[t._v("latest")]),t._v("的时候")])]),t._v(" "),a("tr",[a("td",[t._v("list")]),t._v(" "),a("td",[t._v("no")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("只能由 ansible 调用，不支持 playbook，这个干啥的大家都懂")])]),t._v(" "),a("tr",[a("td",[t._v("name")]),t._v(" "),a("td",[t._v("yes")]),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td",[t._v("你需要安装的包的名字，也能如此使用"),a("em",[t._v("name=python=2.7")]),t._v("安装 python2.7")])]),t._v(" "),a("tr",[a("td",[t._v("state")]),t._v(" "),a("td",[t._v("no")]),t._v(" "),a("td",[t._v("present")]),t._v(" "),a("td",[t._v("present/latest/absent")]),t._v(" "),a("td",[t._v("用于描述安装包最终状态，"),a("em",[t._v("present/latest")]),t._v("用于安装包，"),a("em",[t._v("absent")]),t._v("用于 remove 安装包")])]),t._v(" "),a("tr",[a("td",[t._v("update_cache")]),t._v(" "),a("td",[t._v("no")]),t._v(" "),a("td",[t._v("no")]),t._v(" "),a("td",[t._v("yes/no")]),t._v(" "),a("td",[t._v("用于安装包前执行更新 list,只会影响 state 参数为"),a("em",[t._v("present/latest")]),t._v("的时候")])])])]),t._v(" "),a("p",[a("strong",[t._v("ping 模块")])]),t._v(" "),a("p",[t._v("ping 模块尝尝用于检测网络是否通畅")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("ansible -i hosts all -m "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ping")]),t._v("\n")])])]),a("h3",{attrs:{id:"其他模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他模块"}},[t._v("#")]),t._v(" 其他模块")]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://hoxis.github.io/ansible-commands-modules-command-shell-raw.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ansible 命令相关模块之 command, shell, raw 模块"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://hoxis.github.io/ansible-commands-modules-others.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ansible 命令相关模块之 expect, script, telnet 模块"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://hoxis.github.io/ansible-files-modules-copy.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ansible 常用文件操作模块之 copy 模块"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://hoxis.github.io/ansible-files-modules-file.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ansible 常用文件操作模块之 file 模块"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://hoxis.github.io/ansible-files-modules-template.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ansible 常用文件操作模块之 template 模块"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://hoxis.github.io/ansible-system-modules.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ansible 常用系统模块之 service/systemd/ping 模块"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[t._v("user 模块：管理用户（创建用户的时候，这边有个提醒：是密码方面，可以使用加密）")])]),t._v(" "),a("li",[a("p",[t._v("fetch 模块：从远程主机拉取文件到管理主机（和 copy 的功能相反），但是只能拉取单个文件（多个文件的话可以打包拉取）")])]),t._v(" "),a("li",[a("p",[t._v("yum 软件包管理模块：（状态默认为 present、也就是 install）")])]),t._v(" "),a("li",[a("p",[t._v("setup 模块（同样无参数，输出主机的信息，信息较多，这里就不写了，只写命令）")])]),t._v(" "),a("li",[a("p",[t._v("cron 模块：定时任务模块")])]),t._v(" "),a("li",[a("p",[t._v("script：本地脚本复制到远程主机执行")])])]),t._v(" "),a("ul",[a("li",[t._v("条件判断")])]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Ensure nginx exists\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /sbin/shutdown "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("t now  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行命令的子任务类型。")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("yum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nginx\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("state")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" present\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("when")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(' ansible_os_family == "CentOS"  '),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#只有 ansible_os_family == "CentOS" 为 true 时才执行该子任务。')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "6"  # 表示与的关系')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# when: ansible_distribution == "CentOS"  or ansible_distribution == "Debian" )  或的关系')]),t._v("\n")])])]),a("h3",{attrs:{id:"循环遍历"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#循环遍历"}},[t._v("#")]),t._v(" 循环遍历")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Ensure soft exists\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("yum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{{ item }}'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("state")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" present\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("when")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(' ansible_os_family == "CentOS"\n  '),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with_items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" gcc\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" gcc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("c++\n")])])]),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/ansible/ansible-examples",target:"_blank",rel:"noopener noreferrer"}},[t._v("ansible-examples"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://ansible-tran.readthedocs.io/en/latest/index.html#",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Ansible 中文权威指南"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://showme.codes/2019-09-19/understand-ansible/",target:"_blank",rel:"noopener noreferrer"}},[t._v("这样理解 Ansible 更容易"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"http://einverne.github.io/post/2020/05/ansible-introduction.html#module",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ansible 介绍及使用"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/162698360",target:"_blank",rel:"noopener noreferrer"}},[t._v("常见操作模块参考"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/chuanxincui/article/details/82864405",target:"_blank",rel:"noopener noreferrer"}},[t._v("ansible 从零开始快速上手"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);