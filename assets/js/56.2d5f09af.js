(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{521:function(e,t,o){"use strict";o.r(t);var r=o(22),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"dom"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[e._v("#")]),e._v(" Dom")]),e._v(" "),o("p",[e._v("一个 DOM 元素可以有以下两类 DOM 子树：")]),e._v(" "),o("ol",[o("li",[e._v("Light tree（光明树） —— 一个常规 DOM 子树，由 HTML 子元素组成。我们在之前章节看到的所有子树都是「光明的」。")]),e._v(" "),o("li",[e._v("Shadow tree（影子树） —— 一个隐藏的 DOM 子树，不在 HTML 中反映，无法被察觉。")])]),e._v(" "),o("p",[o("code",[e._v("Node")]),e._v("是节点树中所有类型节点的基类。每个"),o("code",[e._v("Node")]),e._v("都有以下3个指针（但不限于）：")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("parent_or_shadow_host_node_")]),e._v("：指向父级（如果是影子根，则指向影子主机；稍后说明）")]),e._v(" "),o("li",[o("code",[e._v("previous_")]),e._v("：指向上一个同级")]),e._v(" "),o("li",[o("code",[e._v("next_")]),e._v("：指向下一个兄弟姐妹")])]),e._v(" "),o("p",[o("code",[e._v("ContainerNode")]),e._v("从"),o("code",[e._v("Element")]),e._v("扩展，为其子级提供了其他指针：")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("first_child_")]),e._v("：")]),e._v(" "),o("li",[o("code",[e._v("last_child_")]),e._v("：")])]),e._v(" "),o("p",[e._v("这意味着：")]),e._v(" "),o("ul",[o("li",[e._v("Siblings 是 linked list类型.  获取parent's n-th child需要O(N)")]),e._v(" "),o("li",[e._v("不能在O（1）下获取parent的所有子")])]),e._v(" "),o("h3",{attrs:{id:"composed-tree-a-tree-of-node-trees"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#composed-tree-a-tree-of-node-trees"}},[e._v("#")]),e._v(" Composed Tree (a tree of node trees)")]),e._v(" "),o("p",[o("strong",[e._v("Shadow tree")]),e._v("的根节点是"),o("code",[e._v("ShadowRoot")])]),e._v(" "),o("p",[e._v("一个"),o("strong",[e._v("影子树")]),e._v("是一个节点树，其根是一个"),o("code",[e._v("ShadowRoot")]),e._v("。从Web开发人员的角度来看，可以通过调用"),o("code",[e._v("element.attachShadow{ ... }")]),e._v("API创建影子根。这里的"),o("em",[e._v("元素")]),e._v("称为"),o("strong",[e._v("影子主机")]),e._v("，如果上下文清晰，则仅称为"),o("strong",[e._v("主机")]),e._v("。")]),e._v(" "),o("ul",[o("li",[e._v("影子根始终通过其host连接到另一个节点树。")]),e._v(" "),o("li",[e._v("影子根主机的节点树有时称为"),o("strong",[e._v("light tree")]),e._v("。")])]),e._v(" "),o("p",[o("img",{attrs:{src:"https://i.loli.net/2021/01/23/HFcQUKTamRfdXAp.png",alt:"image-20210123000133936"}})]),e._v(" "),o("ul",[o("li",[e._v("document tree不包含shadow tree")]),e._v(" "),o("li",[o("code",[e._v("Document")]),e._v(" 和 "),o("code",[e._v("ShadowRoot")]),e._v(" 总是节点树的根，并且 implements "),o("code",[e._v("TreeScope")]),e._v(".")]),e._v(" "),o("li",[e._v("TreeScope具有ID到元素的映射")]),e._v(" "),o("li",[e._v("普通的dom遍历不能穿过shadow root：因为shadowRoot并不算是其host的child")]),e._v(" "),o("li",[e._v("FlatTree:")]),e._v(" "),o("li",[e._v("FlatTreeTraversal：Blink不会在内存中存储或维护平面树数据结构。相反，Blink提供了一个实用程序类，该实用程序类"),o("em",[e._v("以平面树顺序")]),o("a",{attrs:{href:"https://chromium.googlesource.com/chromium/src/+/master/third_party/blink/renderer/core/dom/flat_tree_traversal.h",target:"_blank",rel:"noopener noreferrer"}},[o("code",[e._v("FlatTreeTraversal")]),o("OutboundLink")],1),e._v("遍历组成的树。")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("document\n├── a1 (host)\n│   ├──/shadowRoot1\n│   │   └── b1\n")])])]),o("p",[e._v("Composed Tree")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("document\n├── shadowRoot1\n├── shadowRoot2\n└── shadowRoot3\n    ├── shadowRoot4\n    └── shadowRoot5\n")])])]),o("p",[e._v("Flat tree")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("document              \n└── a1 (host)\n   └── B\n")])])]),o("p",[e._v("Blink doesn't store nor maintain a flat tree data structure in the memory. Instead, Blink provides a utility class, "),o("a",{attrs:{href:"https://chromium.googlesource.com/chromium/src/+/master/third_party/blink/renderer/core/dom/flat_tree_traversal.h",target:"_blank",rel:"noopener noreferrer"}},[o("code",[e._v("FlatTreeTraversal")]),o("OutboundLink")],1),e._v(", which traverses a composed tree "),o("em",[e._v("in a flat tree order")]),e._v(".")])])}),[],!1,null,null,null);t.default=a.exports}}]);