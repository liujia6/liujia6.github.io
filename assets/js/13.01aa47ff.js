(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{483:function(t,a,e){"use strict";e.r(a);var r=e(22),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"正则表达式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://github.com/ziishaned/learn-regex/blob/master/translations/README-cn.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("正则表达式"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"元字符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#元字符"}},[t._v("#")]),t._v(" 元字符")]),t._v(" "),e("p",[t._v("正则表达式主要依赖于元字符。 元字符不代表他们本身的字面意思，他们都有特殊的含义。一些元字符写在方括号中的时候有一些特殊的意思。以下是一些元字符的介绍：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("元字符")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v(".")]),t._v(" "),e("td",[t._v("句号匹配任意单个字符除了换行符。")])]),t._v(" "),e("tr",[e("td",[t._v("[ ]")]),t._v(" "),e("td",[t._v("字符种类。匹配方括号内的任意字符。")])]),t._v(" "),e("tr",[e("td",[t._v("[^ ]")]),t._v(" "),e("td",[t._v("否定的字符种类。匹配除了方括号里的任意字符")])]),t._v(" "),e("tr",[e("td",[t._v("*")]),t._v(" "),e("td",[t._v("匹配>=0个重复的在*号之前的字符。")])]),t._v(" "),e("tr",[e("td",[t._v("+")]),t._v(" "),e("td",[t._v("匹配>=1个重复的+号前的字符。")])]),t._v(" "),e("tr",[e("td",[t._v("?")]),t._v(" "),e("td",[t._v("标记?之前的字符为可选.")])]),t._v(" "),e("tr",[e("td",[t._v("{n,m}")]),t._v(" "),e("td",[t._v("匹配num个大括号之前的字符或字符集 (n <= num <= m).")])]),t._v(" "),e("tr",[e("td",[t._v("(xyz)")]),t._v(" "),e("td",[t._v("字符集，匹配与 xyz 完全相等的字符串.")])]),t._v(" "),e("tr",[e("td",[t._v("|")]),t._v(" "),e("td",[t._v("或运算符，匹配符号前或后的字符.")])]),t._v(" "),e("tr",[e("td",[t._v("\\")]),t._v(" "),e("td",[t._v("转义字符,用于匹配一些保留的字符 "),e("code",[t._v("[ ] ( ) { } . * + ? ^ $ \\ |")])])]),t._v(" "),e("tr",[e("td",[t._v("^")]),t._v(" "),e("td",[t._v("从开始行开始匹配.")])]),t._v(" "),e("tr",[e("td",[t._v("$")]),t._v(" "),e("td",[t._v("从末端开始匹配.")])])])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("符号")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("?=")]),t._v(" "),e("td",[t._v('正先行断言-存在（"(T|t)he(?=\\sfat)" => '),e("a",{attrs:{href:"https://github.com/ziishaned/learn-regex/blob/master/translations/README-cn.md#learn-regex",target:"_blank",rel:"noopener noreferrer"}},[t._v("The"),e("OutboundLink")],1),t._v(" fat cat sat on the mat.）必须跟着后面的")])]),t._v(" "),e("tr",[e("td",[t._v("?!")]),t._v(" "),e("td",[t._v('负先行断言-排除（"(T|t)he(?!\\sfat)" => The fat cat sat on '),e("a",{attrs:{href:"https://github.com/ziishaned/learn-regex/blob/master/translations/README-cn.md#learn-regex",target:"_blank",rel:"noopener noreferrer"}},[t._v("the"),e("OutboundLink")],1),t._v(" mat.）后面不跟着")])]),t._v(" "),e("tr",[e("td",[t._v("?<=")]),t._v(" "),e("td",[t._v('正后发断言-存在（"(?<=(T|t)he\\s)(fat|mat)" => The '),e("a",{attrs:{href:"https://github.com/ziishaned/learn-regex/blob/master/translations/README-cn.md#learn-regex",target:"_blank",rel:"noopener noreferrer"}},[t._v("fat"),e("OutboundLink")],1),t._v(" cat sat on the "),e("a",{attrs:{href:"https://github.com/ziishaned/learn-regex/blob/master/translations/README-cn.md#learn-regex",target:"_blank",rel:"noopener noreferrer"}},[t._v("mat"),e("OutboundLink")],1),t._v(".）前面必须有")])]),t._v(" "),e("tr",[e("td",[t._v("?<!")]),t._v(" "),e("td",[t._v('负后发断言-排除（"(?<!(T|t)he\\s)(cat)" => The cat sat on '),e("a",{attrs:{href:"https://github.com/ziishaned/learn-regex/blob/master/translations/README-cn.md#learn-regex",target:"_blank",rel:"noopener noreferrer"}},[t._v("cat"),e("OutboundLink")],1),t._v(".）前面不跟着")])]),t._v(" "),e("tr",[e("td",[t._v("(?:p)")]),t._v(" "),e("td",[t._v("非捕获分组")])])])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("标志")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("i")]),t._v(" "),e("td",[t._v("忽略大小写。")])]),t._v(" "),e("tr",[e("td",[t._v("g")]),t._v(" "),e("td",[t._v("全局搜索。")])]),t._v(" "),e("tr",[e("td",[t._v("m")]),t._v(" "),e("td",[t._v("多行修饰符：锚点元字符 ^ $ 工作范围在每行的起始。")])])])]),t._v(" "),e("h2",{attrs:{id:"简写字符集"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简写字符集"}},[t._v("#")]),t._v(" 简写字符集")]),t._v(" "),e("p",[t._v("正则表达式提供一些常用的字符集简写。如下:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("简写")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v(".")]),t._v(" "),e("td",[t._v("除换行符外的所有字符")])]),t._v(" "),e("tr",[e("td",[t._v("\\w")]),t._v(" "),e("td",[t._v("匹配所有字母数字，等同于 "),e("code",[t._v("[a-zA-Z0-9_]")])])]),t._v(" "),e("tr",[e("td",[t._v("\\W")]),t._v(" "),e("td",[t._v("匹配所有非字母数字，即符号，等同于： "),e("code",[t._v("[^\\w]")])])]),t._v(" "),e("tr",[e("td",[t._v("\\d")]),t._v(" "),e("td",[t._v("匹配数字： "),e("code",[t._v("[0-9]")])])]),t._v(" "),e("tr",[e("td",[t._v("\\D")]),t._v(" "),e("td",[t._v("匹配非数字： "),e("code",[t._v("[^\\d]")])])]),t._v(" "),e("tr",[e("td",[t._v("\\s")]),t._v(" "),e("td",[t._v("匹配所有空格字符，等同于： "),e("code",[t._v("[\\t\\n\\f\\r\\p{Z}]")])])]),t._v(" "),e("tr",[e("td",[t._v("\\S")]),t._v(" "),e("td",[t._v("匹配所有非空格字符： "),e("code",[t._v("[^\\s]")])])]),t._v(" "),e("tr",[e("td",[t._v("\\f")]),t._v(" "),e("td",[t._v("匹配一个换页符")])]),t._v(" "),e("tr",[e("td",[t._v("\\n")]),t._v(" "),e("td",[t._v("匹配一个换行符")])]),t._v(" "),e("tr",[e("td",[t._v("\\r")]),t._v(" "),e("td",[t._v("匹配一个回车符")])]),t._v(" "),e("tr",[e("td",[t._v("\\t")]),t._v(" "),e("td",[t._v("匹配一个制表符")])]),t._v(" "),e("tr",[e("td",[t._v("\\v")]),t._v(" "),e("td",[t._v("匹配一个垂直制表符")])]),t._v(" "),e("tr",[e("td",[t._v("\\p")]),t._v(" "),e("td",[t._v("匹配 CR/LF（等同于 "),e("code",[t._v("\\r\\n")]),t._v("），用来匹配 DOS 行终止符")])])])]),t._v(" "),e("h2",{attrs:{id:"贪婪匹配与惰性匹配-greedy-vs-lazy-matching"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#贪婪匹配与惰性匹配-greedy-vs-lazy-matching"}},[t._v("#")]),t._v(" 贪婪匹配与惰性匹配 (Greedy vs lazy matching)")]),t._v(" "),e("p",[t._v("正则表达式默认采用贪婪匹配模式，在该模式下意味着会匹配尽可能长的子串。我们可以使用 "),e("code",[t._v("?")]),t._v(" 将贪婪匹配模式转化为惰性匹配模式。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('"/(.*at)/" => The fat cat sat on the mat.  //贪婪匹配模式， 全部匹配，从开头到最后at\n')])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('"/(.*?at)/" => The fat cat sat on the mat.  //惰性匹配模式， 只匹配 The fat  ，匹配到就结束\n')])])]),e("h2",{attrs:{id:"密码强度"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#密码强度"}},[t._v("#")]),t._v(" "),e("strong",[t._v("密码强度")])]),t._v(" "),e("p",[t._v("匹配包括数字和字母的8-16位密码")]),t._v(" "),e("p",[t._v("要求：由数字和字母组成，并且要同时含有数字和字母，且长度要在8-16位之间。")]),t._v(" "),e("p",[t._v("​     "),e("code",[t._v("/^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,16}$/")])]),t._v(" "),e("p",[t._v("分开来注释一下：")]),t._v(" "),e("p",[t._v("^ 匹配一行的开头位置")]),t._v(" "),e("p",[t._v("(?![0-9]+$) 预测该位置后面不全是数字")]),t._v(" "),e("p",[t._v("(?![a-zA-Z]+$) 预测该位置后面不全是字母")]),t._v(" "),e("p",[t._v("[0-9A-Za-z] {8,16} 由8-16位数字或这字母组成")]),t._v(" "),e("p",[t._v("$ 匹配行结尾位")]),t._v(" "),e("p",[t._v("注：(?!xxxx) 是正则表达式的负向零宽断言一种形式，标识预该位置后不是xxxx字符。")]),t._v(" "),e("p",[e("img",{attrs:{src:"C:/Users/liujia11/AppData/Local/YNote/data/qq7BA07D265CD8DF2D3A91F2E66391AF07/d27f8e49be234ca6a0f469c6d687966d/clipboard.png",alt:"img"}})]),t._v(" "),e("p",[t._v("数字的开始，小数点的左右都会有单词边界，这意味着单词边界不仅仅是英文字母，还包括数字。")]),t._v(" "),e("p",[t._v("\\b属于匹配位置的元字符，一般作占位作用，而不被捕获，同属于匹配位置的还有匹配行起始位^和行结束位$")]),t._v(" "),e("h2",{attrs:{id:"引用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#引用"}},[t._v("#")]),t._v(" 引用")]),t._v(" "),e("p",[t._v("/(ab)(ac)(ad)\\1,\\2,\\3/,     '$1$2'")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("在正则中用**\\n**来表示对括号的引用")]),t._v(" "),e("ul",[e("li",[t._v('找到连续3次出现的字符 "wwddfffeee".match(/(\\w)\\1\\1/g) 输出 ["fff", "eee"]')])])]),t._v(" "),e("li",[e("p",[t._v("在替换的字符串内，用**$n**表示对对括号内的引用")])])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("方法")]),t._v(" "),e("th",[t._v("语法")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/JavaScript/Reference/Global_Objects/RegExp/exec",target:"_blank",rel:"noopener noreferrer"}},[t._v("exec"),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("reg.exec('string')")]),t._v(" "),e("td",[t._v("一个在字符串中执行查找匹配的RegExp方法，它返回一个数组（未匹配到则返回null）。这个结果是"),e("strong",[t._v("一次一次获得，每次数组长度为1")])])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/JavaScript/Reference/Global_Objects/RegExp/test",target:"_blank",rel:"noopener noreferrer"}},[t._v("test"),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("reg.test('string')")]),t._v(" "),e("td",[t._v("一个在字符串中测试是否匹配的RegExp方法，它返回true或false。")])]),t._v(" "),e("tr",[e("td"),t._v(" "),e("td"),t._v(" "),e("td",[t._v("以上是正则方法，以下是字符串方法，还有一个正则方法compile被废弃不推荐使用")])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/JavaScript/Reference/Global_Objects/String/match",target:"_blank",rel:"noopener noreferrer"}},[t._v("match"),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("str.match(reg)")]),t._v(" "),e("td",[t._v("一个在字符串中执行查找匹配的String方法，它返回"),e("strong",[t._v("一个数组或者在未匹配到时返回null")]),t._v("。")])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/JavaScript/Reference/Global_Objects/String/search",target:"_blank",rel:"noopener noreferrer"}},[t._v("search"),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("str.search(regexp)")]),t._v(" "),e("td",[t._v("一个在字符串中测试匹配的String方法，它返回"),e("strong",[t._v("匹配到的位置索引")]),t._v("，或者在失败时返回-1。")])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/JavaScript/Reference/Global_Objects/String/replace",target:"_blank",rel:"noopener noreferrer"}},[t._v("replace"),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("str.replace(regexp|substr, newSubStr|function)")]),t._v(" "),e("td",[t._v("一个在字符串中执行查找匹配的String方法，并且使用替换字符串替换掉匹配到的子字符串。")])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/JavaScript/Reference/Global_Objects/String/split",target:"_blank",rel:"noopener noreferrer"}},[t._v("split"),e("OutboundLink")],1)]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("一个使用正则表达式或者一个固定字符串分隔一个字符串，并将分隔后的子字符串存储到数组中的String方法。")])])])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://i.loli.net/2021/06/26/OAEZJCUQK7BPzSs.png",alt:"img"}})]),t._v(" "),e("ul",[e("li",[t._v("由于exec方法是一次次获取，可以编写以下函数，一次性获取所有匹配的值")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getExecStr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("reg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    \n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" resArr "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    \n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("  res"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    \n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    res "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" reg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("            \n      resArr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("    \n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" resArr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getExecStr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("str"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("item"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("https://www.cnblogs.com/snowsolf/p/js_replace.html")]),t._v(" "),e("p",[t._v("https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/replace")]),t._v(" "),e("p",[t._v("https://blog.csdn.net/b954960630/article/details/82634008")])])}),[],!1,null,null,null);a.default=s.exports}}]);