(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{459:function(t,a,e){"use strict";e.r(a);var s=e(22),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"linux-总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux-总结"}},[t._v("#")]),t._v(" linux 总结")]),t._v(" "),e("h2",{attrs:{id:"文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文件"}},[t._v("#")]),t._v(" 文件")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://i.loli.net/2020/12/12/t816ZLWsnBzxuvy.png",alt:"img"}})]),t._v(" "),e("p",[t._v("文件类型：普通文件（-）、文件夹（d）、字符设备文件（c）、块设备文件（b）、符号链接文件（l）、管道文件（p）、套接字文件 （s）")]),t._v(" "),e("p",[e("strong",[t._v("字符设备")]),t._v("：【键盘、串口】提供连续的数据流，应用程序可以顺序读取，通常不支持随机存取。相反，此类设备支持按字节/字符来读写数据。举例来说，键盘、串口、调制解调器都是典型的字符设备")]),t._v(" "),e("p",[e("strong",[t._v("块设备")]),t._v(" ：【U 盘】应用程序可以随机访问设备数据，程序可自行确定读取数据的位置。应用程序可以随机访问设备数据，程序可自行确定读取数据的位置。硬盘、软盘、CD-ROM 驱动器和闪存都是典型的块设备，应用程序可以寻址磁盘上的任何位置，并由此读取数据。此外，数据的读写只能以块(通常是 512B)的倍数进行。与字符设备不同，块设备并不支持基于字符的寻址。")]),t._v(" "),e("h2",{attrs:{id:"查看文件类型-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看文件类型-file"}},[t._v("#")]),t._v(" 查看文件类型 file")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("示例")]),t._v(" "),e("th",[t._v("结果")]),t._v(" "),e("th",[t._v("解释")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("-i")]),t._v(" "),e("td",[t._v("file -i a.jpg")]),t._v(" "),e("td",[t._v("a.jpg: text/plain; charset=us-ascii")]),t._v(" "),e("td",[t._v("输出文件的 mime 类型")])])])]),t._v(" "),e("ul",[e("li",[t._v("text/plain：普通文本。")]),t._v(" "),e("li",[t._v("text/html：HTML 文本。")]),t._v(" "),e("li",[t._v("application/pdf：PDF 文档。")]),t._v(" "),e("li",[t._v("application/msword：Word 文档。")]),t._v(" "),e("li",[t._v("image/png：PNG 图片。")]),t._v(" "),e("li",[t._v("mage/jpeg：JPEG 图片。")]),t._v(" "),e("li",[t._v("application/x-tar：TAR 文件。")]),t._v(" "),e("li",[t._v("application/x-gzip：GZIP 文件。")])]),t._v(" "),e("h2",{attrs:{id:"查看文件内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看文件内容"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.cnblogs.com/yangliguo/p/8463131.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看文件内容"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[t._v("cat 由第一行开始显示文件内容")]),t._v(" "),e("li",[t._v("tac 从最后一行开始显示，可以看出 tac 是 cat 的倒着写\nnl 显示的时候，顺道输出行号！")]),t._v(" "),e("li",[t._v("more 一页一页的显示文件内容")]),t._v(" "),e("li",[t._v("less 与 more 类似，但是比 more 更好的是，他可以往前翻页！\n-head 只看头几行")]),t._v(" "),e("li",[t._v("tail 只看尾巴几行")]),t._v(" "),e("li",[t._v("你可以使用 man [命令]来查看各个命令的使用文档，如 ：man cp。")])]),t._v(" "),e("h2",{attrs:{id:"ls"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ls"}},[t._v("#")]),t._v(" ls")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 选项")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -a "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出目录所有文件，包含以.开始的隐藏文件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -A "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出除.及..的其它文件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -r "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 反序排列")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -t "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以文件修改时间排序")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -S "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以文件大小排序")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -h "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以易读大小显示")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -l "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#除了文件名之外，还将文件的权限、所有者、文件大小等信息详细列出来")]),t._v("\n")])])]),e("h2",{attrs:{id:"inode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#inode"}},[t._v("#")]),t._v(" inode")]),t._v(" "),e("p",[t._v('文件数据都储存在"块"中，那么很显然，我们还必须找到一个地方储存文件的元信息，比如文件的创建者、文件的创建日期、文件的大小等等。这种储存文件元信息的区域就叫做 inode，中文译名为"索引节点"。文件或目录的 inode 编号是一个用 于标识的唯一数字，除了文件名以外的所有文件信息，都存在 inode 之中')]),t._v(" "),e("p",[t._v("每一个文件都有对应的 inode，里面包含了与该文件有关的一些信息。")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2011/12/inode.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("理解 inode"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("可以用 stat 命令，查看某个文件的 inode 信息：")]),t._v(" "),e("blockquote",[e("p",[t._v("stat example.txt")])]),t._v(" "),e("h3",{attrs:{id:"inode-的特殊作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#inode-的特殊作用"}},[t._v("#")]),t._v(" inode 的特殊作用")]),t._v(" "),e("ul",[e("li",[t._v("有时，文件名包含特殊字符，无法正常删除。这时，直接删除 inode 节点，就能起到删除文件的作用。")]),t._v(" "),e("li",[t._v("移动文件或重命名文件，只是改变文件名，不影响 inode 号码。")]),t._v(" "),e("li",[t._v("打开一个文件以后，系统就以 inode 号码来识别这个文件，不再考虑文件名。因此，通常来说，系统无法从 inode 号码得知文件名。\n"),e("ul",[e("li",[t._v("第 3 点使得软件更新变得简单，可以在不关闭软件的情况下进行更新，不需要重启。因为系统通过 inode 号码，识别运行中的文件，不通过文件名。更新的时候，新版文件以同样的文件名，生成一个新的 inode，不会影响到运行中的文件。等到下一次运行这个软件的时候，文件名就自动指向新版文件，旧版文件的 inode 则被回收。")])])])]),t._v(" "),e("h2",{attrs:{id:"软链接-硬链接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#软链接-硬链接"}},[t._v("#")]),t._v(" 软链接/硬链接")]),t._v(" "),e("ul",[e("li",[t._v("软连接的 inode 指向源文件的文件路径，如果原路径文件删除，那么软链接也会失效")]),t._v(" "),e("li",[t._v("硬链接的 inode 和源文件的 inode 是一致的，只是文件名不同。对文件内容进行修改会影响所有的文件名的内容。但是删除文件名，不影响文件内容本身\n"),e("ul",[e("li",[t._v("inode 有一个链接数的信息，指向该 inode 的文件名总数，如果新增一个硬链接，会加一")]),t._v(" "),e("li",[t._v("目录文件的链接数：\n"),e("ul",[e("li",[t._v('创建目录时，默认生成两个目录，‘。’和‘。。/’，前者的 inode 号码就是当前目录的 inode 号码等于当前目录的硬链接数，任何一个目录的"硬链接"总数，总是等于 2 加上它的子目录总数（含隐藏目录）。')])])])])])]),t._v(" "),e("p",[t._v("坑：windows 下 ln -s 命令不能达到预期效果，会创建一个硬链接。")]),t._v(" "),e("p",[t._v("执行 "),e("code",[t._v("ln -s test ab")])]),t._v(" "),e("p",[t._v("用"),e("code",[t._v("ls -l")]),t._v("命令看到以下文件夹 ab，是一个指向 test 的软链接,查看和修改 ab 文件夹中的内容实际上就是修改 test 文件夹下的")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://i.loli.net/2020/12/12/azKLntyB5q7XRiP.png",alt:"image-20201212192336320"}})]),t._v(" "),e("p",[t._v("【软链接地址】指“快捷键”文件名称，该文件是被指令创建\n两个路径都需要是绝对路径 不然会报红")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("示例")]),t._v(" "),e("th",[t._v("解释")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("ln - s src linkDest")]),t._v(" "),e("td",[t._v("创建")])]),t._v(" "),e("tr",[e("td",[t._v("ln - snf newSrc linkDest")]),t._v(" "),e("td",[t._v("修改")])]),t._v(" "),e("tr",[e("td",[t._v("rm - rf linkDest")]),t._v(" "),e("td",[t._v("删除软链接 ，软链接地址最后不能含有“/”，当含有“/”时，删除的是软链接目标目录下的资源，而不是软链接本身")])])])]),t._v(" "),e("h2",{attrs:{id:"归档-压缩"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#归档-压缩"}},[t._v("#")]),t._v(" 归档| 压缩")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("命令")]),t._v(" "),e("th",[t._v("解释")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("tar -czvf test.tar test1/ test2/")]),t._v(" "),e("td",[e("code",[t._v("压缩")]),t._v("test1 和 test2 目录到 test.tar/tar.gz/tgz 三种文件都可以")])]),t._v(" "),e("tr",[e("td",[t._v("tar -xzvf filename.tgz")]),t._v(" "),e("td",[e("code",[t._v("解压")]),t._v("tar/tar.gz/tgz 三种文件都可以")])])])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("使用")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("-c")]),t._v(" "),e("td",[t._v("建立压缩档案")])]),t._v(" "),e("tr",[e("td",[t._v("- x")]),t._v(" "),e("td",[t._v("解压")])]),t._v(" "),e("tr",[e("td",[t._v("- t")]),t._v(" "),e("td",[t._v("查看内容")])]),t._v(" "),e("tr",[e("td",[t._v("- r")]),t._v(" "),e("td",[t._v("向压缩归档文件末尾追加文件")])]),t._v(" "),e("tr",[e("td",[t._v("- u")]),t._v(" "),e("td",[t._v("更新原压缩包中的文件。")])]),t._v(" "),e("tr",[e("td",[t._v("-z")]),t._v(" "),e("td",[t._v("有 gzip 属性的,使用 gzip 算法")])]),t._v(" "),e("tr",[e("td",[t._v("- v")]),t._v(" "),e("td",[t._v("显示所有过程")])]),t._v(" "),e("tr",[e("td",[t._v("- O")]),t._v(" "),e("td",[t._v("将文件解开到标准输出中")])])])]),t._v(" "),e("p",[t._v("目录（d）、文件（-）、字符型文件（c）或块设备（b）；")]),t._v(" "),e("h2",{attrs:{id:"复制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#复制"}},[t._v("#")]),t._v(" 复制")]),t._v(" "),e("p",[e("code",[t._v("cp source destination")])]),t._v(" "),e("p",[e("code",[t._v("cp -R source destination")]),t._v(" 递归地复制整个目录的内容。")]),t._v(" "),e("h2",{attrs:{id:"mkdir"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mkdir"}},[t._v("#")]),t._v(" mkdir")]),t._v(" "),e("p",[e("code",[t._v("mkdir -p dir1/dir2")]),t._v(" : 如果不存在该目录就，递归的创建目录")]),t._v(" "),e("h2",{attrs:{id:"find"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#find"}},[t._v("#")]),t._v(" find")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("find ../ -maxdepth 1 -name '*.zip' -exec cp {} ./ \\;")]),t._v(" "),e("ul",[e("li",[t._v("找到上一级目录下的 zip 文件并将其复制到当前目录下")]),t._v(" "),e("li",[t._v("find path option")]),t._v(" "),e("li",[t._v("--maxdepth 1 只在当前目录下搜索")]),t._v(" "),e("li",[t._v("-exec 命令 ; # 表示找到文件后对这些文件执行命令 命令必须以;结尾")])])]),t._v(" "),e("li",[e("code",[t._v('find /home ! -name "*.txt"')]),t._v(" "),e("ul",[e("li",[t._v("否定参数 ！，不满足该条件的其他文件，以上是/home 目录下不是 txt 的所有文件")])])]),t._v(" "),e("li",[e("code",[t._v('find . -name "*.java"|xargs cat|grep -v ^$|wc -l')]),t._v(" "),e("ul",[e("li",[t._v("代码行数统计, 排除空行获取文件的 md5 值")])])])]),t._v(" "),e("h2",{attrs:{id:"md5-值计算"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#md5-值计算"}},[t._v("#")]),t._v(" md5 值计算")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ md5sum app-sso.zip\n49198f8f31d0315fe3392c39f2fed1bb *app-sso.zip\n")])])]),e("h2",{attrs:{id:"wc-命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#wc-命令"}},[t._v("#")]),t._v(" wc 命令")]),t._v(" "),e("p",[e("code",[t._v("wc(word count)")]),t._v(" 命令功能为统计指定的文件中字节数、字数、行数，并将统计结果输出。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#选项")]),t._v("\n-c "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#统计字节数")]),t._v("\n-l "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#统计行数")]),t._v("\n-m "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#统计字符数")]),t._v("\n-w "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#统计词数，一个字被定义为由空白、跳格或换行字符分隔的字符串")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#实例")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wc")]),t._v(" text.txt "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查找文件的 行数 单词数 字节数 文件名，结果：7 8 70 test.txt")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" test.txt "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wc")]),t._v(" -l "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#统计输出结果的行数")]),t._v("\n\nλ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wc")]),t._v(" -l jsconfig.json     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 统计jsconfig.json文件的行数")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#16 jsconfig.json")]),t._v("\n\nλ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("wc")]),t._v(" -l "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" jsconfig.json  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 统计jsconfig.json文件的行数，不输入文件名")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#16")]),t._v("\n")])])]),e("h2",{attrs:{id:"curl和wget请求-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#curl和wget请求-1"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2011/09/curl.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("curl"),e("OutboundLink")],1),t._v("和"),e("a",{attrs:{href:"https://www.cnblogs.com/ftl1012/p/9265699.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("wget"),e("OutboundLink")],1),t._v("请求 1")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.cnblogs.com/peida/archive/2013/03/18/2965369.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("wget"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("wget 是 linux 上的命令行的下载工具。这是一个 GPL 许可证下的自由软件。")]),t._v(" "),e("ul",[e("li",[t._v("wget 支持"),e("strong",[t._v("HTTP(s)、FTP 协议、代理服务器")]),t._v("和"),e("strong",[t._v("断点续传")]),t._v("功能")]),t._v(" "),e("li",[t._v("能够"),e("strong",[t._v("自动递归")]),t._v("远程主机的目录，找到合乎条件的文件并将其下载到本地硬盘上")]),t._v(" "),e("li",[t._v("如果必要，wget 将恰当地转换页面中的超级连接以在本地生成可浏览的"),e("strong",[t._v("镜像")]),t._v("。")]),t._v(" "),e("li",[t._v("由于没有交互式界面，wget 可在"),e("strong",[t._v("后台运行")]),t._v("，截获并忽略 HANGUP 信号，因此在用户推出登录以后，仍可继续运行。")]),t._v(" "),e("li",[t._v("通常，wget 用于"),e("strong",[t._v("成批量地下载")]),t._v("Internet 网站上的文件，或制作远程网站的"),e("strong",[t._v("镜像")]),t._v("。")])]),t._v(" "),e("p",[t._v("rcp 命令用于复制远程文件或目录。")]),t._v(" "),e("h2",{attrs:{id:"curl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#curl"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.cnblogs.com/hujiapeng/p/8470099.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("curl"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("如果命令需要换行，在换行处加 反斜杠\\")]),t._v(" "),e("div",{staticClass:"language-kotlin extra-class"},[e("pre",{pre:!0,attrs:{class:"language-kotlin"}},[e("code",[t._v("curl "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("http1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("next "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("no"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("keepalive "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("X POST "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://www. domain.com/requestUri"')]),t._v(" \\\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("H "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Type: application/json'")]),t._v(" \\\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("H "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'User-agent: test'")]),t._v(" \\\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("H "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"token: tokenValue"')]),t._v(" \\\n "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("data")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{\\"jsons\\":[{\\"id\\":\\"1\\",\\"value\\":1}],\\"type\\":\\"M\\",\\"name\\":\\"fei\\"}"')]),t._v("\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("使用")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("-v")]),t._v(" "),e("td",[t._v("展示全部信息")])]),t._v(" "),e("tr",[e("td",[t._v("–header")]),t._v(" "),e("td",[t._v("指定 post body 的 content type")])]),t._v(" "),e("tr",[e("td",[t._v("-d")]),t._v(" "),e("td",[t._v("post body 的内容")])]),t._v(" "),e("tr",[e("td",[t._v("-H")]),t._v(" "),e("td",[t._v("修改请求头")])]),t._v(" "),e("tr",[e("td",[t._v("-T")]),t._v(" "),e("td",[t._v("PUT 请求 其后加上文件可以直接上传文件")])]),t._v(" "),e("tr",[e("td",[t._v("-O")]),t._v(" "),e("td",[t._v("下载文件")])]),t._v(" "),e("tr",[e("td",[t._v("-u")]),t._v(" "),e("td",[t._v("设置用户名和密码")])]),t._v(" "),e("tr",[e("td",[t._v("-XGET 或者-XPOST")]),t._v(" "),e("td",[t._v("指定请求方式为 GET 或者 POST")])]),t._v(" "),e("tr",[e("td",[t._v('--data "{"jsons":[{"id":"1","value":1}],"type":"M","name":"fei"}"')]),t._v(" "),e("td",[t._v("body 请求参数用 --data 表示（两个横杆）；请求内容有引号时，加反斜杠\\")])]),t._v(" "),e("tr",[e("td"),t._v(" "),e("td")])])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("示例")]),t._v(" "),e("th",[t._v("使用")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v('curl -v --header "Content-Type: application/json" -d"{"value":"node JS"}" http://localhost:3000/test')]),t._v(" "),e("td",[t._v("设置请求头并 post 请求")])]),t._v(" "),e("tr",[e("td",[t._v("curl -v -T test.tgz ${url}")]),t._v(" "),e("td",[t._v("上传 test.tgz 文件到 url 目录下")])]),t._v(" "),e("tr",[e("td",[t._v("curl -O http://www.linux.com/dodo[1-5].JPG")]),t._v(" "),e("td",[t._v("dodo1，dodo2，dodo3，dodo4，dodo5 全部保存下来")])]),t._v(" "),e("tr",[e("td",[t._v("curl -o #1_#2.JPG http://www.linux.com/{hello,bb}/dodo[1-5].JPG")]),t._v(" "),e("td",[t._v("这样就需要对文件进行重命名。")])])])]),t._v(" "),e("h2",{attrs:{id:"ps"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ps"}},[t._v("#")]),t._v(" ps")]),t._v(" "),e("p",[e("code",[t._v("ps -l")]),t._v(" 默认展示与当前 shell 相关的进程")]),t._v(" "),e("p",[e("code",[t._v("ps -aux")]),t._v(" 列出目前所有的正在内存当中的程序")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" aux\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# USER               PID  %CPU %MEM      VSZ    RSS   TT  STAT STARTED      TIME COMMAND")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kenny             6155  21.3  1.7  7969944 284912   ??  S    二03下午 199:14.14 /Appl...OS/WeChat")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kenny              559  20.4  0.8  4963740 138176   ??  S    二03下午  33:28.27 /Appl...S/iTerm2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# _windowserver      187  18.0  0.6  7005748  95884   ??  Ss   二03下午 288:44.97 /Syst...Light.WindowServer -daemon")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kenny             1408  10.7  2.1  5838592 347348   ??  S    二03下午 138:51.63 /Appl...nts/MacOS/Google Chrome")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kenny              327   5.8  0.5  5771984  79452   ??  S    二03下午   2:51.58 /Syst...pp/Contents/MacOS/Finder")]),t._v("\n")])])]),e("h2",{attrs:{id:"window-下查看端口占用进程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#window-下查看端口占用进程"}},[t._v("#")]),t._v(" window 下查看端口占用进程")]),t._v(" "),e("p",[t._v("以 8080 为例:")]),t._v(" "),e("p",[t._v("netstat -ano |findstr 8080 : 查找占用 8080 端口的进程对应的 PID,假设是 9784;")]),t._v(" "),e("p",[t._v("tasklist |findstr 9784 : 查找 PID 为 9784 的进程，也就是占用 8080 端口的进程;")]),t._v(" "),e("p",[t._v("taskkill /T /F /PID 9784 : 杀死这个进程")]),t._v(" "),e("h2",{attrs:{id:"awk"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#awk"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2018/11/awk.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("awk"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://en.wikipedia.org/wiki/AWK",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("awk")]),e("OutboundLink")],1),t._v("是处理文本文件的一个应用程序")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("它依次处理文件的每一行，并读取里面的每一个字段。")])]),t._v(" "),e("li",[e("p",[t._v("对于日志、CSV 那样的"),e("strong",[t._v("每行格式相同的文本文件")]),t._v("，"),e("code",[t._v("awk")]),t._v("可能是最方便的工具。")])])]),t._v(" "),e("h2",{attrs:{id:"vim-常用操作总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vim-常用操作总结"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://github.com/chenxiaochun/blog/issues/60",target:"_blank",rel:"noopener noreferrer"}},[t._v("vim 常用操作总结"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("strong",[t._v("yy")]),t._v(" 复制一行")]),t._v(" "),e("p",[e("strong",[t._v("x")]),t._v(" 向剪切一个一个字符，如果是在行尾，则为向前剪切")]),t._v(" "),e("p",[e("strong",[t._v("dd")]),t._v(" 删除一行")]),t._v(" "),e("p",[e("strong",[t._v("p")]),t._v(" 粘贴复制或剪切的内容")]),t._v(" "),e("p",[e("strong",[t._v("u")]),t._v(" 恢复更改")]),t._v(" "),e("p",[e("strong",[t._v("ggVG")]),t._v(" 全选")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzA4MTc4NTUxNQ==&mid=2650518612&idx=1&sn=125c2cb9ee6d76a6817fb0ebc5a3c5e4&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[t._v("vim"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"ping-命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ping-命令"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/45110873",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ping 命令"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("简单来说，「ping」是用来探测本机与网络中另一主机之间是否可达的命令，如果两台主机之间 ping 不通，则表明这两台主机不能建立起连接。ping 是定位网络通不通的一个重要手段")]),t._v(" "),e("ul",[e("li",[t._v("基于 ICMP 协议， Internet 控制报文协议")]),t._v(" "),e("li",[t._v("ping 命令会发送一份 ICMP 回显请求报文给目标主机，并等待目标主机返回 ICMP 回显应答。因为 ICMP 协议会要求目标主机在收到消息之后，必须返回 ICMP 应答消息给源主机，如果源主机在一定时间内收到了目标主机的应答，则表明两台主机之间网络是可达的。")]),t._v(" "),e("li",[t._v("直接基于网络层的 IP 协议，即 ICMP 报文是封装在 IP 包中")]),t._v(" "),e("li",[t._v("IP 协议是一种无连接的，不可靠的数据包协议，它并不能保证数据一定被送达，那么我们要保证数据送到就需要通过其它模块来协助实现，这里就引入的是 ICMP 协议。")]),t._v(" "),e("li",[t._v("大致可分为两类：\n"),e("ul",[e("li",[t._v("查询报文类型；主要应用于：ping 查询、子网掩码查询、时间戳查询等等。")]),t._v(" "),e("li",[t._v("差错报文类型。")])])])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://wangchujiang.com/linux-command/c/yum.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("yum 安装"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.jianshu.com/p/d934d3ba67ec",target:"_blank",rel:"noopener noreferrer"}},[t._v("linux 下更新到最新版本"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"linux-删除-git-文件夹"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux-删除-git-文件夹"}},[t._v("#")]),t._v(" linux 删除.git 文件夹")]),t._v(" "),e("p",[t._v("1.在本地仓库的目录下调用命令行删除根目录下的.git 文件夹，输入")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('find . -name ".git" | xargs rm -Rf\n')])])]),e("p",[t._v("这样本地仓库就清除了，像下面这样，master 不见了。")]),t._v(" "),e("ol",[e("li",[t._v("手动删除掉残留的.git 文件")]),t._v(" "),e("li",[t._v("在命令行中输入 rm -rf + github 仓库地址，例")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("rm -rf https://github.com/NeroSolomon/VLearning.git\n")])])]),e("ol",[e("li",[t._v("在 github 的对应的库中到 setting 删除库。")])]),t._v(" "),e("h2",{attrs:{id:"xshell-上传下载文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xshell-上传下载文件"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://blog.csdn.net/hhy_123963/article/details/81080553?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-3.base&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-3.base",target:"_blank",rel:"noopener noreferrer"}},[t._v("XShell 上传下载文件"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("sudo apt-get install lrzsz")]),t._v(" "),e("p",[t._v("安装完毕即可使用")]),t._v(" "),e("p",[t._v("rz，sz 是便是 Linux/Unix 同 Windows 进行 ZModem 文件传输的命令行工具")]),t._v(" "),e("p",[t._v("rz------即是接收文件，xshell 就会弹出文件选择对话框，选好文件之后关闭对话框，文件就会上传到 linux 里的当前目录")]),t._v(" "),e("p",[t._v("sz file ----------就是发文件到 windows 上（保存的目录是可以配置） 比 ftp 命令方便多了，而且服务器不用再开 FTP 服务了")]),t._v(" "),e("h2",{attrs:{id:"查询启动的端口号"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查询启动的端口号"}},[t._v("#")]),t._v(" 查询启动的端口号")]),t._v(" "),e("p",[e("code",[t._v("lsof -nP -iTCP -sTCP:LISTEN")])]),t._v(" "),e("p",[t._v("![image-20210815231810951](/Users/liujia/Library/Application Support/typora-user-images/image-20210815231810951.png)")]),t._v(" "),e("p",[t._v("通过 ps 命令 serve 的命令起的进程")]),t._v(" "),e("p",[e("code",[t._v("ps aux | grep serve | grep risk")])]),t._v(" "),e("p",[t._v("![image-20210815231855863](/Users/liujia/Library/Application Support/typora-user-images/image-20210815231855863.png)")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://wangchujiang.com/linux-command/c/kill.html",target:"_blank",rel:"noopener noreferrer"}},[t._v(" kill"),e("OutboundLink")],1)]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-s sigspec "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" -n signum "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" -sigspec"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" pid "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jobspec "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" -l "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sigspec"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n-s sig    信号名称。\n-n sig    信号名称对应的数字。\n-l        列出信号名称。如果在该选项后提供了数字那么假设它是信号名称对应的数字。\n-L        等价于-l选项。\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 终止作业标识符为1的作业。")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("user2@pc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" -9 %1\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);