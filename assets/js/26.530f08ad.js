(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{498:function(t,a,s){"use strict";s.r(a);var e=s(22),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"vue-命名规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-命名规范"}},[t._v("#")]),t._v(" vue 命名规范")]),t._v(" "),s("ul",[s("li",[t._v("定义组件名方法\n"),s("ol",[s("li",[t._v("采用短横线分隔命名")]),t._v(" "),s("li",[t._v("采用首字母大写命名：既可以用短横线分割名引用，也可以用首字母大写引用，注意在 dom 模板中使用只有短横线有效")])])]),t._v(" "),s("li",[t._v("prop 名\n"),s("ul",[s("li",[t._v("html 中的特性名是大小写不敏感的，浏览器会把所有大写字符解释为小写字符，当你使用 dom 中的模板时 camelCase 格式的 prop 名需要使用其等价的 kebab-case 命名；例如")])])])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("welcome")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("greeting-text")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("hi"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("welcome")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" props:{ greetingText:String }\n")])])]),s("ul",[s("li",[t._v("事件名\n"),s("ul",[s("li",[t._v("事件名不会被用作一个 JavaScript 变量名或属性名，所以就没有理由使用 camelCase 或 PascalCase 了。并且 v-on 事件监听器在 DOM 模板中会被自动转换为全小写 (因为 HTML 是大小写不敏感的)，所以 v-on:myEvent 将会变成 v-on:myevent——导致 myEvent 不可能被监听到。")])])])]),t._v(" "),s("p",[t._v("因此，我们推荐你始终使用 kebab-case 的事件名")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dom-resize"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结：")]),t._v(" "),s("p",[t._v("采用 kebab-case 短横线分隔法命名")]),t._v(" "),s("ul",[s("li",[t._v("文件夹")]),t._v(" "),s("li",[t._v("单文件组件 component 名")]),t._v(" "),s("li",[t._v("组件在 html 模板中使用"),s("code",[t._v("<my-conponent></my-component>")])]),t._v(" "),s("li",[t._v("在模板中 prop 传入到组件中"),s("code",[t._v('<my-conponent set-text="hello"></my-component>')])]),t._v(" "),s("li",[t._v("所有事件名 this.$emit('api-reload')")])]),t._v(" "),s("p",[t._v("采用 PascalCase 大驼峰命名")]),t._v(" "),s("ul",[s("li",[t._v("公共基础组件名 BaseButton")]),t._v(" "),s("li",[t._v("js 中 component 注册组件")]),t._v(" "),s("li",[t._v("组件的 name 属性")]),t._v(" "),s("li",[t._v("class 类")])]),t._v(" "),s("p",[t._v("采用 camelCase 小驼峰命名")]),t._v(" "),s("ul",[s("li",[t._v("子组件接受 prop 属性 props：{setText：String}")]),t._v(" "),s("li",[t._v("变量和函数一般用小驼峰")])]),t._v(" "),s("p",[t._v("其他")]),t._v(" "),s("ul",[s("li",[t._v("常量 const PRICE_MAX=1000，采用大写字符+下划线")]),t._v(" "),s("li",[t._v("私有变量 下划线开头+小驼峰 let _this=this")])])])}),[],!1,null,null,null);a.default=n.exports}}]);