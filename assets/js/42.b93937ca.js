(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{510:function(e,l,a){"use strict";a.r(l);var t=a(22),r=Object(t.a)({},(function(){var e=this,l=e.$createElement,a=e._self._c||l;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"babel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel"}},[e._v("#")]),e._v(" Babel")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.babeljs.cn/docs/",target:"_blank",rel:"noopener noreferrer"}},[e._v("BABEL 中文官网"),a("OutboundLink")],1)]),e._v(" "),a("h4",{attrs:{id:"参考-一文彻底读懂-babel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考-一文彻底读懂-babel"}},[e._v("#")]),e._v(" 参考："),a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/326824078",target:"_blank",rel:"noopener noreferrer"}},[e._v("一文彻底读懂 Babel"),a("OutboundLink")],1)]),e._v(" "),a("h4",{attrs:{id:"配置-前端科普系列-babel-把-es6-送上天的通天塔"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置-前端科普系列-babel-把-es6-送上天的通天塔"}},[e._v("#")]),e._v(" 配置："),a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/129089156",target:"_blank",rel:"noopener noreferrer"}},[e._v("前端科普系列-Babel：把 ES6 送上天的通天塔"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("polyfill配置："),a("a",{attrs:{href:"https://segmentfault.com/a/1190000039347539",target:"_blank",rel:"noopener noreferrer"}},[e._v("javascript - Babel7 相关_个人文章 - SegmentFault 思否"),a("OutboundLink")],1)]),e._v(" "),a("p",[a("img",{attrs:{src:"https://pic3.zhimg.com/80/v2-29d8d4701f6df08ccafc853af268b5a2_720w.jpg",alt:"img"}})]),e._v(" "),a("h2",{attrs:{id:"定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[e._v("#")]),e._v(" 定义")]),e._v(" "),a("ul",[a("li",[e._v("Babel 是一个 JavaScript 编译器。主要用于将高版本的 JavaScript 代码转为向后兼容的 JS 代码，从而能让我们的代码运行在更低版本的浏览器或者其他的环境中。")])]),e._v(" "),a("p",[e._v("babel5 及之前是一个包含 CLI 工具+编译器+转换器的集合工具包；babel6 之后进行了拆分，集合包被分成多个包：")]),e._v(" "),a("ul",[a("li",[a("p",[a("code",[e._v("@babel/cli")])])]),e._v(" "),a("li",[a("p",[e._v("是 Babel 自带了一个内置的 CLI 命令行工具，我们就可以通过命令行来编译文件；")])]),e._v(" "),a("li",[a("p",[e._v("它有两种调用方式，可以通过全局安装或者本地安装调用，选用一种即可，推荐在项目本地安装。")])])]),e._v(" "),a("p",[e._v("babel 转换的阶段分为解析->转换->生成")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("解析（parsing）")]),e._v(" "),a("ul",[a("li",[e._v("@babel/parser 将源码解析成 AST")])])]),e._v(" "),a("li",[a("p",[e._v("转换（transforming）")]),e._v(" "),a("ul",[a("li",[e._v("babel 的语法转换功能依赖于各种插件")])])]),e._v(" "),a("li",[a("p",[e._v("生成（generating）")]),e._v(" "),a("ul",[a("li",[e._v("@babel/generator 将转好好的 AST 重新生成代码")])])])]),e._v(" "),a("h2",{attrs:{id:"配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[e._v("#")]),e._v(" 配置")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("plugins")]),e._v("：babel 中使用的插件，这些插件可以控制如何转换代码")]),e._v(" "),a("li",[a("code",[e._v("presets")]),e._v("：babel 可以使用哪些新的语法特性，一个 presets 对一组新语法的特性提供了支持，多个 presets 可以叠加。presets 其实是一组 plugins 的集合，每个 plugin 完成一个新语法的转换工作。presets 是按照 ECMAScript 草案来组织的，通常可以分为三大类：")])]),e._v(" "),a("p",[a("strong",[e._v("年度标准")])]),e._v(" "),a("ul",[a("li",[e._v("ES2015 - 包含 2015 年加入的新特性")]),e._v(" "),a("li",[e._v("ES2016 - 包含 2016 年加入的新特性")]),e._v(" "),a("li",[e._v("ES2017 - 包含 2017 年加入的新特性")]),e._v(" "),a("li",[e._v("env - 包含当前所有 ECMAScript 标准的新特性")])]),e._v(" "),a("p",[a("strong",[e._v("被社区提出未写入标准")])]),e._v(" "),a("ul",[a("li",[e._v("stage0 一些 Babel 插件实现了对这些特性的支持，但是不确定是否会被定为标准")]),e._v(" "),a("li",[e._v("stage1 值得被纳入标准的特性")]),e._v(" "),a("li",[e._v("stage2 已被起草，将被纳入标准里")]),e._v(" "),a("li",[e._v("stage3 已定稿，各大浏览器厂商和 NodeJS 社区开始着手实现")]),e._v(" "),a("li",[e._v("stage4 在接下来一年会纳入标准")])]),e._v(" "),a("p",[a("strong",[e._v("支持特定场景的语法特征")])]),e._v(" "),a("ul",[a("li",[e._v("babel-plugin-react 支持 React 开发里的 JSX 语法")]),e._v(" "),a("li",[e._v("babel-plugin-import")])]),e._v(" "),a("h3",{attrs:{id:"babel-插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel-插件"}},[e._v("#")]),e._v(" Babel 插件")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/jamiebuilds/babel-handbook/blob/master/translations/zh-Hans/plugin-handbook.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("Babel 插件手册"),a("OutboundLink")],1)]),e._v(" "),a("li",[e._v("核心库——@babel/core\n"),a("ul",[a("li",[e._v("@babel/core 模块是一个可以完成代码字符串转换的库，babel 所有的插件都是通过核心库来进行开发和加载的，如下是官方给的使用示例：")])])])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('const babel = require("@babel/core");\nbabel.transform("code", optionsObject);\n')])])]),a("ul",[a("li",[e._v("syntax：语法\n"),a("ul",[a("li",[e._v("像 "),a("code",[e._v("const")]),e._v("、"),a("code",[e._v("=>")]),e._v(" 这些默认被 Babel 转译的就是 syntax 的类型")]),e._v(" "),a("li",[e._v("Sytanx 类型。例如箭头函数、const/let 等语法特性，babel 可以通过"),a("a",{attrs:{href:"https://babeljs.io/docs/en/plugins",target:"_blank",rel:"noopener noreferrer"}},[e._v("各种插件"),a("OutboundLink")],1),e._v("实现兼容。")])])]),e._v(" "),a("li",[e._v("pollyfill\n"),a("ul",[a("li",[e._v("像promise这种新的API需要引入polyfill实现")])])])]),e._v(" "),a("h2",{attrs:{id:"pollyfill"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pollyfill"}},[e._v("#")]),e._v(" pollyfill")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000020237785?utm_source=sf-similar-article",target:"_blank",rel:"noopener noreferrer"}},[e._v("前端工程化 - Babel7 转码（三）- preset-env + transform-runtime_个人文章 - SegmentFault 思否"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://www.jiangruitao.com/babel/babel-preset-env/",target:"_blank",rel:"noopener noreferrer"}},[e._v("@babel/preset-env - 姜瑞涛的官方网站"),a("OutboundLink")],1)])]),e._v(" "),a("p",[a("strong",[e._v("core-js")])]),e._v(" "),a("ul",[a("li",[e._v("它是 JavaScript 标准库的 polyfill")]),e._v(" "),a("li",[e._v("它尽可能的进行模块化，让你能选择你需要的功能")]),e._v(" "),a("li",[e._v("它和 babel 高度集成，可以对 core-js 的引入进行最大程度的优化")])]),e._v(" "),a("p",[e._v("目前我们使用的默认都是"),a("code",[e._v("core-js@2")]),e._v("，但它已经封锁了分支，在此之后的特性都只会添加到"),a("code",[e._v("core-js@3")]),e._v("，因此也是推荐使用最新的`core-js@3")]),e._v(" "),a("h3",{attrs:{id:"配置方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置方式"}},[e._v("#")]),e._v(" 配置方式")]),e._v(" "),a("ol",[a("li",[e._v("preset-env预设的配置"),a("code",[e._v("useBuiltIns")]),e._v("，"),a("code",[e._v('"usage" | "entry" | false')]),e._v("，默认值是 false。\n"),a("ul",[a("li",[a("code",[e._v("false")]),e._v("：需要在 js 代码第一行主动 import '@babel/polyfill'，会将@babel/polyfill 整个包全部导入。\n（不推荐，能覆盖到所有 API 的转译，但体积最大）")]),e._v(" "),a("li",[a("code",[e._v("entry")]),e._v("：需要在 js 代码第一行主动 import '@babel/polyfill'，会将 browserslist 环境不支持的所有垫片都导入。\n（能够覆盖到‘hello‘.includes(‘h‘)这种句法，足够安全且代码体积不是特别大）\n"),a("ul",[a("li",[e._v("根据browserslist 将环境不支持的所有垫片都导入，足够安全，其经过了browserslist过滤所需要的，代码量中等。可优化")])])]),e._v(" "),a("li",[a("code",[e._v("usage")]),e._v("：项目里不用主动 import，会自动将代码里已使用到的、且 browserslist 环境不支持的垫片导入。\n（但是检测不到‘hello‘.includes(‘h‘)这种句法，对这类原型链上的句法问题不会做转译，"),a("strong",[e._v("书写代码需注意")]),e._v("）\n"),a("ul",[a("li",[e._v("按需引入，处理不了nodeModules，需要所有nodeModules库都符合规范，不然容易报错，代码体积最小")])])])])]),e._v(" "),a("li",[a("code",[e._v("targets")]),e._v("，用来配置需要支持的的环境，不仅支持浏览器，还支持 node。如果没有配置 targets 选项，就会读取项目中的 browserslist 配置项。")]),e._v(" "),a("li",[e._v("@babel/plugin-transform-runtime插件配合preset-env表示将代码由ES6编译为可执行的ES5，不会污染全局")])])])}),[],!1,null,null,null);l.default=r.exports}}]);