(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{462:function(t,e,r){"use strict";r.r(e);var s=r(22),o=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"web-安全"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#web-安全"}},[t._v("#")]),t._v(" web 安全")]),t._v(" "),r("h2",{attrs:{id:"点击劫持-clickjacking"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#点击劫持-clickjacking"}},[t._v("#")]),t._v(" 点击劫持(clickjacking)")]),t._v(" "),r("p",[t._v("原理：攻击者使用透明的 iframe 覆盖在网页上，诱使用户在点击，")]),t._v(" "),r("ol",[r("li",[t._v("flash 点击劫持：用过 flash 游戏，让用户完成一系列复杂的操作")]),t._v(" "),r("li",[t._v("图片覆盖攻击 Cross Site Image Overlaying（XSIO）")])]),t._v(" "),r("p",[t._v("防护：")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("X-Frame-Options")]),t._v(" "),r("ul",[r("li",[t._v("X-Frame-Options HTTP 响应头是用来给浏览器指示允许一个页面可否在 <frame>, <iframe>或者 <object> 中展现的标记。网站可以使用此功能，来确保自己网站的内容没有被嵌到别人的网站中去，也从而避免了点击劫持 的攻击。")])])])]),t._v(" "),r("h2",{attrs:{id:"csrf"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#csrf"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"https://juejin.im/post/5ce55b3d5188253386140dd0#heading-4",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSRF"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("CSRF(Cross Site Request Forgery)指的是跨站请求伪造")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://tech.meituan.com/2018/10/11/fe-security-csrf.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端安全系列（二）：如何防止CSRF攻击？ - 美团技术团队"),r("OutboundLink")],1)]),t._v(" "),r("h3",{attrs:{id:"概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),r("ul",[r("li",[t._v("在受骗者已经登录对应网站生成 cookie 后，攻击者做一个网站让受骗者点击，这时受骗者的 cookie 还在，那么这个构造的网站就能够利用受骗者的 cookie 执行网站恶意请求")]),t._v(" "),r("li",[t._v("CSRF 攻击是黑客借助受害者的 cookie 骗取服务器的信任，但是黑客并不能拿到 cookie，也看不到 cookie 的内容")])]),t._v(" "),r("h3",{attrs:{id:"特点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),r("ol",[r("li",[t._v("发生在第三方域名")]),t._v(" "),r("li",[t._v("不能获取到 cookie 只是借用（在请求参数中加上 cookie 并让服务器验证），但是跨域请求拿不到 cookie")])]),t._v(" "),r("h3",{attrs:{id:"攻击方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#攻击方式"}},[t._v("#")]),t._v(" 攻击方式")]),t._v(" "),r("p",[t._v("由于 AJAX 是不支持跨域发送请求的，所以我们只能够用支持跨域请求的 img、script、form 表单来发起请求，这些请求的限制性很强")]),t._v(" "),r("ol",[r("li",[t._v("通过 img\\iframe\\script 发起 get 请求\n"),r("ul",[r("li",[t._v("由于 get 请求只能获取信息，不会修改数据库中信息，所以一般 get 请求伪造的影响较小。")])])]),t._v(" "),r("li",[t._v("通过 js 提交 form 表单发起 post 请求\n"),r("ul",[r("li",[t._v("post 请求一般是通过表单发送，而表单请求不能修改请求头，也不能带上 query，所以这就是 token 防止 csrf 的原因")])])])]),t._v(" "),r("h3",{attrs:{id:"防护"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#防护"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/40588156",target:"_blank",rel:"noopener noreferrer"}},[t._v("防护"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("根据CSRF的特点我们有以下防护措施")]),t._v(" "),r("ol",[r("li",[t._v("校验请求来源\n"),r("ol",[r("li",[t._v("阻止不明请求\n"),r("ol",[r("li",[r("a",{attrs:{href:"https://blog.csdn.net/sinat_36521655/article/details/104844667",target:"_blank",rel:"noopener noreferrer"}},[t._v("设置cookies的sameSite属性的值为strict或者lax"),r("OutboundLink")],1),t._v(" "),r("ol",[r("li",[t._v("这样只有同源网站的请求才会带上cookies。")])])]),t._v(" "),r("li",[t._v("同源检测\n"),r("ol",[r("li",[t._v("根据Origin限制跨域请求")]),t._v(" "),r("li",[t._v("限制"),r("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2019/06/http-referer.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("referer"),r("OutboundLink")],1),t._v("：把Referrer Policy的策略设置成same-origin 可通过CSP")])])])])]),t._v(" "),r("li",[t._v("请求时要求附加本域才能获取的信息\n"),r("ol",[r("li",[t._v("验证csrf token：服务端随机生成token，保存在服务端session中，同时保存到客户端中，客户端发送请求时，把token带到HTTP请求头或参数中，服务端接收到请求，验证请求中的token与session中的是否一致。\n"),r("ol",[r("li",[t._v("前后端不分离：token可以直接在编译模板的过程中写到表单的隐藏字段中，这样发送请求不需要额外的操作；")]),t._v(" "),r("li",[t._v("前后端分离：双重cookie校验\n"),r("ol",[r("li",[t._v("token可以在登录时写入到cookies中，发送请求时，js读取cookies中的token，并设置到HTTP请求头中。\naxios有相关配置如下\n"),r("img",{attrs:{src:"https://picx.zhimg.com/80/v2-7ea9e31f1d90b2eb816e93d680e6e82b_720w.webp?source=1940ef5c",alt:"img"}})])])])])])])]),t._v(" "),r("li",[t._v("保证网络请求由真实用户发出\n"),r("ul",[r("li",[t._v("用户操作限制（验证码）")])])])])]),t._v(" "),r("li",[t._v("不使用cookie，使用token校验用户身份，换用token标识用户身份，放到请求头里面")])]),t._v(" "),r("h2",{attrs:{id:"xss"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#xss"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"https://juejin.cn/post/6844903685122703367#heading-13",target:"_blank",rel:"noopener noreferrer"}},[t._v("XSS"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("Cross-site scripting，跨站脚本攻击。HTMl 注入插入恶意脚本，篡改网页，在用户浏览网页时，控制用户浏览器的一种攻击")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://tsejx.github.io/javascript-guidebook/computer-networks/web-security/xss/#%E9%98%B2%E5%BE%A1%E7%AD%96%E7%95%A5",target:"_blank",rel:"noopener noreferrer"}},[t._v("XSS 跨站脚本攻击 - JavaScript Guidebook"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/leizongmin/js-xss/blob/master/README.zh.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("js-xss/README.zh.md at master · leizongmin/js-xss"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("主要经过以下两个步骤")]),t._v(" "),r("ol",[r("li",[t._v("攻击者提交恶意代码。")]),t._v(" "),r("li",[t._v("浏览器执行恶意代码。")])]),t._v(" "),r("h3",{attrs:{id:"分类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分类"}},[t._v("#")]),t._v(" 分类")]),t._v(" "),r("ol",[r("li",[t._v("存储型 XSS：也叫持久性 XSS，恶意代码提交到"),r("code",[t._v("服务器端")]),t._v("中，"),r("code",[t._v("服务端")]),t._v("拼接 html 返回，再在前端解析执行。\n"),r("ol",[r("li",[r("strong",[t._v("常见于评论、私信、发博客")]),t._v("。所有查看了该博客该评论的用户，都会执行这段恶意脚本")]),t._v(" "),r("li",[t._v("XSS 蠕虫："),r("strong",[t._v("在恶意脚本中利用用户的登录状态进行关注、发微博、发私信等操作")]),t._v("，发出的微博和私信可再带上攻击 URL，诱导更多人点击，不断放大攻击范围。这种窃用受害者身份发布恶意内容，层层放大攻击范围的方式，被称为“XSS 蠕虫”。")])])]),t._v(" "),r("li",[t._v("反射性XSS：也叫非持久性 XSS，输入恶意代码，通过"),r("code",[t._v("URL")]),t._v("提交执行，"),r("code",[t._v("服务端")]),t._v("取出恶意代码，拼接在 html 时返回，浏览器请求再执行恶意代码。\n"),r("ol",[r("li",[t._v("出现于前后端未分离的项目，后端控制前端渲染的情况下才会出现，如果是前后端分离的情况则属于DOM型XSS")]),t._v(" "),r("li",[t._v("常见于 "),r("strong",[t._v("通过 URL 传递参数")]),t._v(" 的功能，如网站搜索、跳转等")])])]),t._v(" "),r("li",[r("h2",{attrs:{id:"dom-型-xss-前端取出url中的恶意代码执行-通过修改页面的-dom-节点形成的-xss-称为-dom-based-xss"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#dom-型-xss-前端取出url中的恶意代码执行-通过修改页面的-dom-节点形成的-xss-称为-dom-based-xss"}},[t._v("#")]),t._v(" Dom 型 XSS："),r("code",[t._v("前端")]),t._v("取出"),r("code",[t._v("URL")]),t._v("中的恶意代码执行，通过修改页面的 dom 节点形成的 XSS，称为 dom based XSS")])])]),t._v(" "),r("h2",{attrs:{id:"总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),r("ul",[r("li",[t._v("防范 XSS 是需要后端 RD 和前端 RD 共同参与的系统工程。\n"),r("ul",[r("li",[t._v("存储型和反射型由于代码是存储到服务端的，需要服务端做xss防范")]),t._v(" "),r("li",[t._v("而DOM型是纯前端获取与展示，需要前端做xss防范")])])]),t._v(" "),r("li",[t._v("转义应该在输出 HTML 时进行，而不是在提交用户输入时。")])]),t._v(" "),r("h3",{attrs:{id:"攻击方式-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#攻击方式-2"}},[t._v("#")]),t._v(" 攻击方式")]),t._v(" "),r("ul",[r("li",[t._v("在 HTML 中内嵌的文本中，恶意内容以 script 标签形成注入。")]),t._v(" "),r("li",[t._v("在内联的 JavaScript 中，拼接的数据突破了原本的限制（字符串，变量，方法名等）。")]),t._v(" "),r("li",[t._v("在标签属性中，恶意内容包含引号，从而突破属性值的限制，注入其他属性或者标签。")]),t._v(" "),r("li",[t._v("在标签的 href、src 等属性中，包含 javascript: 等可执行代码。")]),t._v(" "),r("li",[t._v("在 onload、onerror、onclick 等事件中，注入不受控制代码。")]),t._v(" "),r("li",[t._v('在 style 属性和标签中，包含类似 background-image:url("javascript:…"); 的代码（新版本浏览器已经可以防范）。')]),t._v(" "),r("li",[t._v("在 style 属性和标签中，包含类似 expression(…) 的 CSS 表达式代码（新版本浏览器已经可以防范）。")])]),t._v(" "),r("h3",{attrs:{id:"危害"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#危害"}},[t._v("#")]),t._v(" 危害")]),t._v(" "),r("ol",[r("li",[t._v("document.cookie 获取 cookie 实现 cookie 劫持，可以通过绑定 IP 防御")]),t._v(" "),r("li",[t._v("通过动态插入 img，在 src 赋值上构造 get 请求构造 get 请求")]),t._v(" "),r("li",[t._v("通过动态添加 post 请求的 form 标签，构造 post 请求")]),t._v(" "),r("li",[t._v("也可以直接通过 ajax 请求发送构造请求")])]),t._v(" "),r("h3",{attrs:{id:"预防"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#预防"}},[t._v("#")]),t._v(" 预防")]),t._v(" "),r("ul",[r("li",[t._v("输入过滤（输入侧过滤能够在某些情况下解决特定的 XSS 问题，但会引入很大的不确定性和乱码问题。在防范 XSS 攻击时应避免此类方法。）\n"),r("ul",[r("li",[t._v("输入侧过滤能够在某些情况下解决特定的 XSS 问题，但会引入很大的不确定性和乱码问题。在防范 XSS 攻击时应避免此类方法。 当然，对于明确的输入类型，例如数字、URL、电话号码、邮件地址等等内容，进行输入过滤还是必要的")])])]),t._v(" "),r("li",[t._v("转义 HTML\n"),r("ul",[r("li",[t._v("不同的上下文，如 HTML 属性、HTML 文字内容、HTML 注释、跳转链接、内联 JavaScript 字符串、内联 CSS 样式表等，所需要的转义规则不一致。 业务 RD 需要选取合适的转义库，并针对不同的上下文调用不同的转义规则。")])])]),t._v(" "),r("li",[t._v("设置 cookie的httponly 缓解 xss，可以通过 trace 请求读取 httponly cookie")]),t._v(" "),r("li",[t._v("预防 DOM 型 XSS 攻击：避免使用 DOM 中的内联事件监听器，")]),t._v(" "),r("li",[t._v("使用 CSP")])]),t._v(" "),r("h2",{attrs:{id:"csp-content-security-policy-内容安全策略检查"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#csp-content-security-policy-内容安全策略检查"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2016/09/csp.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSP（Content Security Policy）内容安全策略检查"),r("OutboundLink")],1)]),t._v(" "),r("ul",[r("li",[r("p",[t._v('"网页安全政策"， CSP 的实质就是白名单制度，开发者明确告诉客户端，哪些外部资源可以加载和执行，等同于提供白名单')])]),t._v(" "),r("li",[r("p",[t._v("如果只允许加载自己域的图片，可以 加上这个 meta 标签"),r("code",[t._v('<meta http-equiv="Content-Security-Policy" content="img-src \'self\';">')])])]),t._v(" "),r("li",[r("p",[r("code",[t._v("Content-Security-Policy: script-src 'self'")])])]),t._v(" "),r("li",[r("p",[r("code",[t._v("Content-Security-Policy: default-src 'self'")])])]),t._v(" "),r("li",[r("p",[t._v("或者后端设置这个 http 响应头，self 表示本域，如果加载其他域的图片浏览器会报错")])]),t._v(" "),r("li",[r("p",[r("img",{attrs:{src:"https://pic4.zhimg.com/v2-bf28b28cd47bbab12b052811d52a1223_b.jpg",alt:"image"}})])]),t._v(" "),r("li",[r("div",{staticClass:"language-http extra-class"},[r("pre",{pre:!0,attrs:{class:"language-http"}},[r("code",[r("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("Content-Security-Policy:")]),t._v(" script-src 'self'; object-src 'none';\nstyle-src cdn.example.org third-party.org; child-src https:\n")])])]),r("ul",[r("li",[t._v("脚本：只信任当前域名")]),t._v(" "),r("li",[r("code",[t._v("<object>")]),t._v("标签：不信任任何 URL，即不加载任何资源")]),t._v(" "),r("li",[t._v("样式表：只信任"),r("code",[t._v("cdn.example.org")]),t._v("和"),r("code",[t._v("third-party.org")])]),t._v(" "),r("li",[t._v("框架（frame）：必须使用 HTTPS 协议加载")]),t._v(" "),r("li",[t._v("其他资源：没有限制")])]),t._v(" "),r("p",[t._v("参考："),r("a",{attrs:{href:"https://www.cnblogs.com/heyuqing/p/6215761.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端安全配置之 Content-Security-Policy(csp)"),r("OutboundLink")],1)])])])])}),[],!1,null,null,null);e.default=o.exports}}]);