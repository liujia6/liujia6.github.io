(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{530:function(v,_,r){"use strict";r.r(_);var t=r(22),e=Object(t.a)({},(function(){var v=this,_=v.$createElement,r=v._self._c||_;return r("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[r("h1",{attrs:{id:"浏览器架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#浏览器架构"}},[v._v("#")]),v._v(" 浏览器架构")]),v._v(" "),r("h2",{attrs:{id:"进程与线程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#进程与线程"}},[v._v("#")]),v._v(" 进程与线程")]),v._v(" "),r("ul",[r("li",[v._v("进程是内存分配的最小单位")])]),v._v(" "),r("h4",{attrs:{id:"进程和进程之间是相互隔离"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#进程和进程之间是相互隔离"}},[v._v("#")]),v._v(" 进程和进程之间是相互隔离")]),v._v(" "),r("ul",[r("li",[v._v("当一个页面或插件崩溃的时候，影响到的仅仅是当前的页面进程或者插件进程，并不会影响到其他页面。")]),v._v(" "),r("li",[v._v("每新打开一个页面都会为其新建一个渲染进程。JS也是运行在渲染进程中，即便是JS阻塞了渲染进程，它影响的也只是当前的页面")]),v._v(" "),r("li",[v._v("当关闭这个页面时，这个进程所占用的所有内存会被系统回收，所以根本不存在内存泄漏的问题。")]),v._v(" "),r("li",[v._v("选项卡中的每个跨站点 iframe 都会获得单独的渲染器进程。")]),v._v(" "),r("li",[v._v("Chrome 把插件进程和渲染进程锁在沙箱里面，这样即使在渲染进程或者插件进程里面执行了恶意程序，恶意程序也无法突破沙箱去获取系统权限")])]),v._v(" "),r("h2",{attrs:{id:"浏览器结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#浏览器结构"}},[v._v("#")]),v._v(" 浏览器结构")]),v._v(" "),r("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ea67200387794bd094956af8ef5f3b19~tplv-k3u1fbpfcp-zoom-1.image",alt:"img"}}),v._v(" "),r("p",[v._v("从图中可以看出，现在的 Chrome 架构中包括下面几个进程：")]),v._v(" "),r("ul",[r("li",[r("p",[v._v("**浏览器进程。**负责界面展示，用户交互，子进程管理，文件存取等")]),v._v(" "),r("p",[v._v("(控制地址栏、书签前进后退按钮，标签页创建/销毁、页面显示、网络请求、资源管理下载、绘制渲染进程的位图)")]),v._v(" "),r("ul",[r("li",[v._v("UI thread：绘制浏览器顶部按钮和导航栏输入框等组件")]),v._v(" "),r("li",[v._v("network thread：处理网络请求，从网上获取数据；")]),v._v(" "),r("li",[v._v("storage thread： 控制文件等的访问；")])])]),v._v(" "),r("li",[r("p",[v._v("**GPU/Viz （Graphics Processing Unit）进程。**其实，Chrome 刚开始发布的时候是没有 GPU 进程的。而 GPU 的使用初衷是为了实现 "),r("strong",[v._v("3D CSS")]),v._v(" 的效果，只是随后网页、Chrome 的 UI 界面都选择采用 GPU 来绘制，这使得 GPU 成为浏览器普遍的需求。最后，Chrome 在其多进程架构上也引入了 GPU 进程。")]),v._v(" "),r("ul",[r("li",[v._v("Raster")])])]),v._v(" "),r("li",[r("p",[v._v("**网络进程。**主要负责页面的网络资源加载。")])]),v._v(" "),r("li",[r("p",[v._v("**插件进程。**主要是负责插件的运行，因插件易崩溃，所以需要通过插件进程来隔离，以保证插件进程崩溃不会对浏览器和页面造成影响。")])]),v._v(" "),r("li",[r("p",[r("strong",[v._v("渲染进程")]),v._v(":将 HTML、CSS 和 JavaScript 转换为网页，默认情况下，Chrome 会为每个 Tab 标签创建一个渲染进程。出于安全考虑，渲染进程都是运行在"),r("strong",[v._v("沙箱模式")]),v._v("下,与操作系统隔离，增加安全性。")]),v._v(" "),r("ul",[r("li",[r("p",[v._v("一个主线程（main thread）")])]),v._v(" "),r("li",[r("p",[v._v("多个工作线程（work thread例如web worker）")])]),v._v(" "),r("li",[r("p",[v._v("一个合成器线程（compositor thread）：在GUI渲染线程后执行，将GUI渲染线程生成的带绘制列表转换为位图。")])]),v._v(" "),r("li",[r("p",[v._v("多个光栅化线程（raster thread）")])]),v._v(" "),r("li",[r("p",[v._v("IO线程：用来和其他进程进行通信")])]),v._v(" "),r("li",[r("p",[r("strong",[v._v("GUI 渲染线程")])])]),v._v(" "),r("li",[r("p",[r("strong",[v._v("JavaScript 引擎线程")])])])])]),v._v(" "),r("li",[r("p",[v._v("GUI渲染线程与JS引擎线程互斥")])]),v._v(" "),r("li",[r("p",[r("strong",[v._v("定时触发器线程")])])]),v._v(" "),r("li",[r("p",[r("strong",[v._v("事件触发线程")])])]),v._v(" "),r("li",[r("p",[r("strong",[v._v("http 异步请求线程")])])])]),v._v(" "),r("h3",{attrs:{id:"多进程架构优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#多进程架构优化"}},[v._v("#")]),v._v(" 多进程架构优化")]),v._v(" "),r("p",[v._v("Chrome将架构从多进程模型转变成面向服务。浏览器将功能以服务的方式提供，以解决多进程架构中的问题。")]),v._v(" "),r("p",[r("img",{attrs:{src:"https://static001.geekbang.org/infoq/72/72ab917eee34ffd4b8bb1352a8f73ad6.png",alt:"img"}})]),v._v(" "),r("p",[v._v("当Chrome运行在拥有强大硬件的计算机上时，会将一个服务以多个进程的方式实现，提高稳定性，当计算机硬件资源紧张时，则可以将多个服务放在一个进程中节省资源。")]),v._v(" "),r("h4",{attrs:{id:"浏览器的进程模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的进程模式"}},[v._v("#")]),v._v(" 浏览器的进程模式")]),v._v(" "),r("p",[v._v("为了节省内存，Chrome提供了四种进程模式（Process Models），不同的进程模式会对 tab 进程做不同的处理。")]),v._v(" "),r("ul",[r("li",[r("strong",[v._v("Process-per-site-instance")]),v._v(" (default) - 同一个 "),r("strong",[v._v("site-instance")]),v._v(" 使用一个进程")]),v._v(" "),r("li",[r("strong",[v._v("Process-per-site -")]),v._v(" 同一个 "),r("strong",[v._v("site")]),v._v(" 使用一个进程")]),v._v(" "),r("li",[r("strong",[v._v("Process-per-tab -")]),v._v(" 每个 tab 使用一个进程")]),v._v(" "),r("li",[r("strong",[v._v("Single process -")]),v._v(" 所有 tab 共用一个进程")])]),v._v(" "),r("p",[v._v("因为这个是 Chrome 默认使用的模式，也就是几乎所有的用户都在用的模式。当你打开一个 tab 访问 a.baidu.com ，然后再打开一个 tab 访问 b.baidu.com，这两个 tab 会使用"),r("strong",[v._v("两个进程")]),v._v("。而如果你在 a.baidu.com 中，通过JS代码打开了 b.baidu.com 页面，这两个 tab 会使用"),r("strong",[v._v("同一个进程")]),v._v("。")]),v._v(" "),r("p",[v._v("可以看一下浏览器的任务管理器")]),v._v(" "),r("p",[v._v("这几个进程之间的关系是什么呢？")]),v._v(" "),r("p",[v._v("首先，当我们是要浏览一个网页，我们会在浏览器的地址栏里输入URL，这个时候"),r("code",[v._v("Browser Process")]),v._v("会向这个URL发送请求，获取这个URL的HTML内容，然后将HTML交给"),r("code",[v._v("Renderer Process")]),v._v("，"),r("code",[v._v("Renderer Process")]),v._v("解析HTML内容，解析遇到需要请求网络的资源又返回来交给"),r("code",[v._v("Browser Process")]),v._v("进行加载，同时通知"),r("code",[v._v("Browser Process")]),v._v("，需要"),r("code",[v._v("Plugin Process")]),v._v("加载插件资源，执行插件代码。解析完成后，"),r("code",[v._v("Renderer Process")]),v._v("计算得到图像帧，并将这些图像帧交给"),r("code",[v._v("GPU Process")]),v._v("，"),r("code",[v._v("GPU Process")]),v._v("将其转化为图像显示屏幕。")])])}),[],!1,null,null,null);_.default=e.exports}}]);