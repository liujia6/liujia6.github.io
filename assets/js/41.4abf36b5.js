(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{509:function(l,v,_){"use strict";_.r(v);var i=_(22),t=Object(i.a)({},(function(){var l=this,v=l.$createElement,_=l._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":l.$parent.slotKey}},[_("h2",{attrs:{id:"前端工程化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前端工程化"}},[l._v("#")]),l._v(" 前端工程化")]),l._v(" "),_("p",[l._v("学习资料")]),l._v(" "),_("ul",[_("li",[l._v("https://segmentfault.com/a/1190000023943703")]),l._v(" "),_("li",[l._v("https://juejin.cn/post/6917447582985748493")])]),l._v(" "),_("p",[l._v("前端工程化的主要目标就是解放生产力、提高生产效率，让前端开发者更多地时间聚焦在写代码这件事情上。通过制定一系列的规范和工作流。借助工具和框架解决前端开发和部署上线以及前后端协作过程中的痛点和难度问题。")]),l._v(" "),_("p",[l._v("典型的前端工作流分为 5 个步骤：")]),l._v(" "),_("ol",[_("li",[l._v("开发\n"),_("ol",[_("li",[l._v("前端框架：插件化（jQuery） -> 模块化（RequireJS） -> 组件化（React）")]),l._v(" "),_("li",[l._v("规范化：正所谓无规矩不成方圆，一些好的规范则能很好的帮助我们对项目进行良好的开发管理。规范化指的是我们在工程开发初期以及开发期间制定的系列规范，其中又包含了\n"),_("ul",[_("li",[l._v("项目目录结构")]),l._v(" "),_("li",[l._v("编码规范：对于编码这块的约束，一般我们都会采用一些强制措施，比如 ESLint、StyleLint 等。")]),l._v(" "),_("li",[l._v("联调规范：这块可参考我以前知乎的回答，前后端分离，后台返回的数据前端没法写，怎么办？")]),l._v(" "),_("li",[l._v("文件命名规范")]),l._v(" "),_("li",[l._v("样式管理规范：目前流行的样式管理有 BEM、Sass、Less、Stylus、CSS Modules 等方式。 git flow 工作流：其中包含分支命名规范、代码合并规范等。")]),l._v(" "),_("li",[l._v("定期 code review")])])]),l._v(" "),_("li",[l._v("模块化：将一个文件拆分成多个相互依赖的文件，最后进行统一的打包和加载，这样能够很好的保证高效的多人协作。其中包含\n"),_("ul",[_("li",[l._v("JS 模块化：CommonJS、AMD、CMD 以及 ES6 Module。")]),l._v(" "),_("li",[l._v("CSS 模块化：Sass、Less、Stylus、BEM、CSS Modules 等。其中预处理器和 BEM 都会有的一个问题就是样式覆盖。而 CSS Modules 则是通过 JS 来管理依赖，最大化的结合了 JS 模块化和 CSS 生态，比如 Vue 中的 style scoped。")]),l._v(" "),_("li",[l._v("资源模块化：任何资源都能以模块的形式进行加载，目前大部分项目中的文件、CSS、图片等都能直接通过 JS 做统一的依赖关系处理。")])])]),l._v(" "),_("li",[l._v("组件化：不同于模块化，模块化是对文件、对代码和资源拆分，而组件化则是对 UI 层面的拆分。\n"),_("ul",[_("li",[l._v("通常，我们会需要对页面进行拆分，将其拆分成一个一个的零件，然后分别去实现这一个个零件，最后再进行组装。")]),l._v(" "),_("li",[l._v("在我们的实际业务开发中，对于组件的拆分我们需要做不同程度的考量，其中主要包括细粒度和通用性这两块的考虑。")]),l._v(" "),_("li",[l._v("对于业务组件，你更多需要考量的是针对你负责业务线的一个适用度，即你设计的业务组件是否成为你当前业务的 “通用” 组件，比如我之前分析过的权限校验组件，它就是一个典型的业务组件。")])])])])]),l._v(" "),_("li",[l._v("测试\n"),_("ol",[_("li",[l._v("自动化测试 CI/CD")])])]),l._v(" "),_("li",[l._v("构建\n"),_("ol",[_("li",[l._v("构建工具：任务化（grunt/gulp） -> 系统化（webpack）")])])]),l._v(" "),_("li",[l._v("部署\n"),_("ol",[_("li",[l._v("CI/CD 脚本")]),l._v(" "),_("li",[l._v("制品存放 af")])])]),l._v(" "),_("li",[l._v("监控")])])])}),[],!1,null,null,null);v.default=t.exports}}]);