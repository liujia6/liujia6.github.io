(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{482:function(t,n,a){"use strict";a.r(n);var s=a(22),e=Object(s.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"js-类型与转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-类型与转换"}},[t._v("#")]),t._v(" JS 类型与转换")]),t._v(" "),a("h2",{attrs:{id:"null与-undefined"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null与-undefined"}},[t._v("#")]),t._v(" "),a("code",[t._v("null")]),t._v("与 "),a("code",[t._v("undefined")])]),t._v(" "),a("ul",[a("li",[t._v("null 表示一个空对象指针，typeof null === 'object'，如果定义的便来给你，在将来用于保存对象，那么最好将该便来给你初始化为 null，这样可以用 null 判断该变量是否保存对象的引用\n"),a("ul",[a("li",[t._v("实际上 undefined 派生自 null")]),t._v(" "),a("li",[a("code",[t._v("Null")]),t._v("类型也只有一个值，就是"),a("code",[t._v("null")]),t._v("，它的语义表示空值，与"),a("code",[t._v("undefined")]),t._v("不同，"),a("code",[t._v("null")]),t._v("是 JavaScript 关键字，所以在任何代码中，你都可以放心用"),a("code",[t._v("null")]),t._v("关键字来获取"),a("code",[t._v("null")]),t._v("值。")])])])]),t._v(" "),a("h3",{attrs:{id:"undefined"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#undefined"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://blog.windstone.cc/js/data-types/#undefined",target:"_blank",rel:"noopener noreferrer"}},[t._v("Undefined"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("一般而言，不需要显示地把一个变量声明为 undefined，字面值 undefined 主要目的是用于比较，引入该值的目的是为了区分未经过初始化的变量与空对象指针")]),t._v(" "),a("p",[t._v("为什么有的编程规范要求用void 0 代替-undefined为什么有的编程规范要求用 void 0 代替 undefined")]),t._v(" "),a("p",[a("code",[t._v("Undefined")]),t._v("类型表示未定义，它的类型只有一个值，就是"),a("code",[t._v("undefined")]),t._v("。任何变量在赋值前是"),a("code",[t._v("Undefined")]),t._v("类型、值为"),a("code",[t._v("undefined")]),t._v("，一般我们可以用全局变量"),a("code",[t._v("undefined")]),t._v("（就是名为"),a("code",[t._v("undefined")]),t._v("的这个变量）来表达这个值，或者"),a("code",[t._v("void")]),t._v("运算来把任意一个表达式变成"),a("code",[t._v("undefined")]),t._v("值。")]),t._v(" "),a("p",[t._v("但是，JavaScript 的"),a("code",[t._v("undefined")]),t._v("是一个变量，而并非是一个关键字，这是 JavaScript 语言公认的设计失误之一。所以，我们为了避免无意中被篡改，通常建议使用"),a("code",[t._v("void 0")]),t._v("来获取"),a("code",[t._v("undefined")]),t._v("值。BTW，在代码压缩时，"),a("code",[t._v("undefined")]),t._v("也会被替换成"),a("code",[t._v("void 0")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined 被篡改")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("注意，给全局的"),a("code",[t._v("undefined")]),t._v("赋值总是会失败，但是可以在函数内给声明"),a("code",[t._v("undefined")]),t._v("变量并赋值。")]),t._v(" "),a("p",[a("code",[t._v("Undefined")]),t._v("跟"),a("code",[t._v("Null")]),t._v("有一定的表意差别，"),a("code",[t._v("Null")]),t._v("表示的是：“赋值了但是为空”。所以，在实际编程时，我们一般不会把变量赋值为"),a("code",[t._v("undefined")]),t._v("，这样可以保证所有值为"),a("code",[t._v("undefined")]),t._v("的变量，都是从未赋值的自然状态。")]),t._v(" "),a("h4",{attrs:{id:"判断变量是否已定义判断变量是否已定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断变量是否已定义判断变量是否已定义"}},[t._v("#")]),t._v(" 判断变量是否已定义判断变量是否已定义")]),t._v(" "),a("p",[t._v("一般情况下，若想判断变量是否已定义会使用"),a("code",[t._v("undefined")]),t._v("来判断，但是使用姿势可能不对。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不推荐（函数内的 undefined 可能被改写）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isUndefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("variable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" variable "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 推荐")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isUndefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("val")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" val "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'undefined'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"boolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boolean"}},[t._v("#")]),t._v(" Boolean")]),t._v(" "),a("p",[t._v("Boolean 值是 true 和 false 的集合，使用 Boolean(val)效果规则如下")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("数据类型")]),t._v(" "),a("th",[t._v("true")]),t._v(" "),a("th",[t._v("false")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v("非空字符串")]),t._v(" "),a("td",[t._v("''")])]),t._v(" "),a("tr",[a("td",[t._v("Number")]),t._v(" "),a("td",[t._v("非零数字值")]),t._v(" "),a("td",[t._v("NaN 和 0")])]),t._v(" "),a("tr",[a("td",[t._v("Object")]),t._v(" "),a("td",[t._v("任何对象")]),t._v(" "),a("td",[t._v("null")])]),t._v(" "),a("tr",[a("td",[t._v("Undefined")]),t._v(" "),a("td",[t._v("-")]),t._v(" "),a("td",[t._v("undefined")])])])]),t._v(" "),a("h2",{attrs:{id:"number"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#number"}},[t._v("#")]),t._v(" Number")]),t._v(" "),a("ul",[a("li",[t._v("使用 IEEE 754 标准定义的数字类型，可以表示数字的最大值和最小值")]),t._v(" "),a("li",[t._v("八进制\n"),a("ul",[a("li",[t._v("首位为 0")]),t._v(" "),a("li",[t._v("如果字面值中的数值超出了范围，那么后面的值会作为十进制解析")]),t._v(" "),a("li",[t._v("严格模式下无效")])])]),t._v(" "),a("li",[t._v("十六进制\n"),a("ul",[a("li",[t._v("首位为 0x")])])]),t._v(" "),a("li",[t._v("ECMAScript 会将消暑点后带有 6 个 0 以上的浮点数值转换为以 e 表示法表示的数值\n"),a("ul",[a("li",[t._v("例如 0.00000003 会被转换为 3e-8")])])]),t._v(" "),a("li",[t._v("NaN\n"),a("ul",[a("li",[t._v("用于表示一个本来要返回数值的操作数未返回数值的情况，这样就不会抛出错误")]),t._v(" "),a("li",[t._v("任何涉及 NaN 的操作都会返回 NaN")]),t._v(" "),a("li",[t._v("NaN 不等于任何值包括本身\n"),a("ul",[a("li",[t._v("使用 isNaN 判断\n"),a("ul",[a("li",[t._v("该函数会将参数转换为数值，如果不能被转换为数值，则返回 true")])])])])])])]),t._v(" "),a("li",[t._v("处理数字统一性的以及比较的库")]),t._v(" "),a("li",[t._v("ECMAScript使用IEEE754格式表示整数和浮点数（double），使用 64 位固定长度来表示\n"),a("ul",[a("li",[t._v("为什么0.1+0.2!==0.3")]),t._v(" "),a("li",[t._v("由于0.1在二进制中是无限循环小数，在js中丢失了精度，所以")]),t._v(" "),a("li",[t._v("规避方法")])])])]),t._v(" "),a("h2",{attrs:{id:"string-boolean-number-对象之间的相互转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-boolean-number-对象之间的相互转换"}},[t._v("#")]),t._v(" String，Boolean，Number，对象之间的相互转换")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "null"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "undefined"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "true"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "false"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "11"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11e20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "1.1e+21"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ""')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1,,2,,3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "function a(){}"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object,object]"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zhang'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object,object]"')]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'false'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"11"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//11")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.1e+21"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1.1e+21")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n")])])]),a("h2",{attrs:{id:"js-类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-类型转换"}},[t._v("#")]),t._v(" js 类型转换")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/01/06/DHBqNMbP6UKWrIv.png",alt:"img"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2021/01/06/vswjYz2XSgClobU.png",alt:"img"}})]),t._v(" "),a("p",[a("strong",[t._v("valueOf()")]),t._v(" 方法返回指定对象的原始值。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Array")]),t._v(" "),a("th",[t._v("返回数组对象本身。")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v("布尔值。")])]),t._v(" "),a("tr",[a("td",[t._v("Date")]),t._v(" "),a("td",[t._v("存储的时间是从 1970 年 1 月 1 日午夜开始计的毫秒数 UTC。")])]),t._v(" "),a("tr",[a("td",[t._v("Function")]),t._v(" "),a("td",[t._v("函数本身。")])]),t._v(" "),a("tr",[a("td",[t._v("Number")]),t._v(" "),a("td",[t._v("数字值。")])]),t._v(" "),a("tr",[a("td",[t._v("Object")]),t._v(" "),a("td",[t._v("对象本身。这是默认情况。")])]),t._v(" "),a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v("字符串值。")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td",[t._v("Math 和 Error 对象没有 valueOf 方法。")])])])]),t._v(" "),a("p",[t._v("函数的 toString 方法返回一个字符串，内容是函数的源码。，函数内部的注释也可以返回。")]),t._v(" "),a("h2",{attrs:{id:"相等运算符的比较与转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相等运算符的比较与转换"}},[t._v("#")]),t._v(" 相等运算符的比较与转换")]),t._v(" "),a("ul",[a("li",[t._v("原始类型的数据会转换成数值类型再进行比较。")]),t._v(" "),a("li",[t._v("如果一个操作数是对象，另一个操作数不是\n"),a("ul",[a("li",[t._v("symbol.toPrimitive(default)")]),t._v(" "),a("li",[t._v("转换为数字")])])]),t._v(" "),a("li",[t._v("如果两个操作数都是对象，则比较它们是不是同一个对象\n"),a("ul",[a("li",[t._v("例如"),a("code",[t._v("[] == [] // false")]),t._v(" 地址不一样")])])]),t._v(" "),a("li",[t._v("特殊规则\n"),a("ul",[a("li",[t._v("任何数和 NaN 都不相等")]),t._v(" "),a("li",[a("code",[t._v("null == undefined //true")]),t._v(" "),a("ul",[a("li",[t._v("null 和 undefined 和任何其他数都不相等")])])]),t._v(" "),a("li",[a("code",[t._v("+0 == -0//true")])])])])]),t._v(" "),a("h2",{attrs:{id:"symbol-toprimitive-转换算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#symbol-toprimitive-转换算法"}},[t._v("#")]),t._v(" "),a("strong",[t._v("Symbol.toPrimitive 转换算法")])]),t._v(" "),a("blockquote",[a("p",[t._v("被调用时,会接受一个字符串参数，表示当前运算的模式，一个有三种模式,只有包装对象有该方法，普通对象无该方法")])]),t._v(" "),a("ul",[a("li",[t._v("Number:该场合需要转成数值")]),t._v(" "),a("li",[t._v("String:该场合需要转成字符串")]),t._v(" "),a("li",[t._v("Default:该场合可以转成数值，也可以转成字符串（例如+号）")])]),t._v(" "),a("p",[t._v("对象 => 基本类型转换算法")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("如果存在，调用 obj[Symbol.toPrimitive](hint)；")])]),t._v(" "),a("li",[a("p",[t._v('否则，如果 hint 取值是 "string"：')]),t._v(" "),a("ul",[a("li",[t._v("无论是否存在，调用 obj.toString() 和 obj.valueOf()")])])]),t._v(" "),a("li",[a("p",[t._v('否则（也就是 hint 取值是 "number" 或 "default" ）：')]),t._v(" "),a("ul",[a("li",[t._v("无论是否存在，调用 obj.valueOf() 和 obj.toString()")])])])]),t._v(" "),a("h3",{attrs:{id:"转换步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转换步骤"}},[t._v("#")]),t._v(" 转换步骤")]),t._v(" "),a("p",[t._v("首先返回 valueof（）值，如果不是原始类型的值，继续调用 toString()方法，如果是原始类型的值就返回 Number（）值就结束。")]),t._v(" "),a("p",[t._v("这里规定了对象的转换规则 hint 为 default，转为 number，首先调用 valueof 方法，如果"),a("strong",[t._v("valueof")]),t._v("方法返回原始值就会直接返回，如果不是就继续调用"),a("strong",[t._v("toString")]),t._v("方法（是经过实践了的！！！）,最后再将返回的原始值转为字符串拼接")]),t._v(" "),a("p",[t._v("例如 var arr=[1,21], arr1=[1,21]")]),t._v(" "),a("p",[t._v("arr==arr1 //false 因为不是同一引用，即不是同一个数组")]),t._v(" "),a("p",[t._v("要用 arr.toString()==arr1.toString()//true")]),t._v(" "),a("p",[t._v("https://blog.csdn.net/itcast_cn/article/details/82887895")]),t._v(" "),a("p",[t._v("可以再看看这篇博客检测一下知识")]),t._v(" "),a("h2",{attrs:{id:"隐式类型转换规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#隐式类型转换规则"}},[t._v("#")]),t._v(" 隐式类型转换规则")]),t._v(" "),a("p",[t._v("预期什么类型的值，就调用该类型的转换函数")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("预期为字符串值的地方,主要发生在字符串的加法+运算时。当一个值为字符串，另一个值为非字符串，")])]),t._v(" "),a("li",[a("p",[t._v("预期为布尔值的地方（比如 if 语句的条件部分），就会将非布尔值的参数自动转换为布尔值。系统内部会自动调用 Boolean 函数。")])]),t._v(" "),a("li",[a("p",[t._v("预期为数值的地方，除了加法运算符（+）有可能把运算子转为字符串，其他运算符都会把运算子自动转成数值。")])])]),t._v(" "),a("h2",{attrs:{id:"号运算规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#号运算规则"}},[t._v("#")]),t._v(" + 号运算规则")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("两个都是对象，")]),t._v(" "),a("ul",[a("li",[t._v("则将"),a("strong",[t._v("两个操作数都转换为字符串")]),t._v("，进行拼接")])])]),t._v(" "),a("li",[a("p",[t._v("两个都是简单数据类型，")]),t._v(" "),a("ul",[a("li",[t._v("则将操作数转换为 number 相加得出结果")])])]),t._v(" "),a("li",[a("p",[t._v("如两个数都是数字")]),t._v(" "),a("ul",[a("li",[t._v("直接运算，这个运算符优先数字相加")])])]),t._v(" "),a("li",[a("p",[t._v("有一个是字符串")]),t._v(" "),a("ul",[a("li",[t._v("如果另外一个是对象的\n"),a("ul",[a("li",[t._v("先调用 symbol.toprimitive（default）")])])])])])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/shaohuan_asym/article/details/41862937",target:"_blank",rel:"noopener noreferrer"}},[t._v("实践"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("当我们创建一个普通对象时（{} 或 new Object() 的方式等），对象上是不具备 [Symbol.toPrimitive] （方法）属性的。所以，对于普通对象的到基本类型值的运算，一般按照具体场景：")]),t._v(" "),a("p",[a("strong",[t._v("语法：")]),t._v(" + Expression")]),t._v(" "),a("p",[a("strong",[t._v("说明：")]),t._v("'+'号运算符作为一元运算符时，Expression 将进行"),a("a",{attrs:{href:"http://www.ecma-international.org/ecma-262/6.0/#sec-tonumber",target:"_blank",rel:"noopener noreferrer"}},[t._v("ToNumber()"),a("OutboundLink")],1),t._v("操作。")]),t._v(" "),a("h2",{attrs:{id:"tonumber-argument-转换方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tonumber-argument-转换方式"}},[t._v("#")]),t._v(" ToNumber( argument )转换方式")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("argument 类型")]),t._v(" "),a("th",[t._v("返回值")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Undefined")]),t._v(" "),a("td",[t._v("return NaN")])]),t._v(" "),a("tr",[a("td",[t._v("Null")]),t._v(" "),a("td",[t._v("return 0")])]),t._v(" "),a("tr",[a("td",[t._v("Boolean")]),t._v(" "),a("td",[t._v("true return 1; false return 0;")])]),t._v(" "),a("tr",[a("td",[t._v("Number")]),t._v(" "),a("td",[t._v("return value")])]),t._v(" "),a("tr",[a("td",[t._v("String")]),t._v(" "),a("td",[t._v("若字符串为纯数字时返回转换后的数字；非纯数字返回 NaN，如果是空字符串为 0")])]),t._v(" "),a("tr",[a("td",[t._v("Symbol")]),t._v(" "),a("td",[t._v("抛出 TypeError 异常")])]),t._v(" "),a("tr",[a("td",[t._v("Object")]),t._v(" "),a("td",[t._v("进行以下步骤：1.先进行 ToPrimitive(argument, hint Number)得到 rs；2.然后返回 ToNumber(rs)的结果。")])])])]),t._v(" "),a("h2",{attrs:{id:"二元运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二元运算符"}},[t._v("#")]),t._v(" 二元运算符")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("值进行"),a("a",{attrs:{href:"http://www.ecma-international.org/ecma-262/6.0/#sec-getvalue",target:"_blank",rel:"noopener noreferrer"}},[t._v("GetValue"),a("OutboundLink")],1),t._v("()操作。")])]),t._v(" "),a("li",[a("p",[t._v("值进行"),a("a",{attrs:{href:"http://www.ecma-international.org/ecma-262/6.0/#sec-toprimitive",target:"_blank",rel:"noopener noreferrer"}},[t._v("ToPrimitive"),a("OutboundLink")],1),t._v("()操作，")])]),t._v(" "),a("li",[a("p",[t._v("若一方为 String 类型，2 个值都进行"),a("a",{attrs:{href:"http://www.ecma-international.org/ecma-262/6.0/#sec-tostring",target:"_blank",rel:"noopener noreferrer"}},[t._v("ToString"),a("OutboundLink")],1),t._v("()转换，最后进行字符串连接操作。")])]),t._v(" "),a("li",[a("p",[t._v("若都不是 String 类型，2 个值都进行"),a("a",{attrs:{href:"http://www.ecma-international.org/ecma-262/6.0/#sec-tonumber",target:"_blank",rel:"noopener noreferrer"}},[t._v("ToNumber"),a("OutboundLink")],1),t._v("()转换，最后进行算数加法运算。")])]),t._v(" "),a("li",[a("p",[t._v("若 input 类型为"),a("strong",[t._v("object")]),t._v("(如：Array、Object、Date)，将根据第 ② 个参数 PreferredType 的值进行以下操作：")])])]),t._v(" "),a("ul",[a("li",[t._v("例如 Date 类型内部重写了 toPrimitive()方法，将“default”设置为“string”，而其他内置的对象都将“default”设置为“number”。")])]),t._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://juejin.im/post/5a695ec16fb9a01ca10b195b",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 对象转换到基本类型值算法 ToPrimitive"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/HaoDaWang/article/details/81319191",target:"_blank",rel:"noopener noreferrer"}},[t._v("谈谈 JS 中的 {} + [] 和 [] + {}"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000016300245",target:"_blank",rel:"noopener noreferrer"}},[t._v("toString 方法和 valueOf 方法以及 Symbol.toPrimitive 方法的学习"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/shaohuan_asym/article/details/41862937",target:"_blank",rel:"noopener noreferrer"}},[t._v("Javascript 对象相加"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);n.default=e.exports}}]);