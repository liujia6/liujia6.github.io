(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{471:function(t,s,e){"use strict";e.r(s);var a=e(22),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"代码风格统一指南"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码风格统一指南"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://www.kancloud.cn/cyyspring/webpack/2310916",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码风格统一指南"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("[toc]")]),t._v(" "),e("h2",{attrs:{id:"eslint"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#eslint"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://cn.eslint.org/docs/user-guide/configuring",target:"_blank",rel:"noopener noreferrer"}},[t._v("ESLINT"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("eslint 负责代码检查")]),t._v(" "),e("h3",{attrs:{id:"processor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#processor"}},[t._v("#")]),t._v(" Processor")]),t._v(" "),e("p",[t._v("要为特定类型的文件指定处理器，请使用 overrides 键和 processor 键的组合。例如，下面对 *.md 文件使用处理器 a-plugin/markdown。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"plugins"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a-plugin"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"overrides"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"files"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*.md"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"processor"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a-plugin/markdown"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"plugins-插件配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#plugins-插件配置"}},[t._v("#")]),t._v(" Plugins 插件配置")]),t._v(" "),e("ul",[e("li",[t._v("官方的规则只能检查标准的 JavaScript 语法，如果你写的是 JSX 或者 Vue 单文件组件，ESLint 的规则就无法处理了。这时就通过安装 ESLint 的插件，指定一些特殊的规则进行检查，在.eslintrc 配置文件配置插件时，可以使用 plugins 来存放插件名字的列表，插件的名字可以省略**eslint-plugin-**前缀。")]),t._v(" "),e("li",[t._v("plugins 要引入对应的插件模块，然后配置相对应的规则 rules 才会生效。")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("npm install "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("save"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("dev eslint"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("plugin"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("vue\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"plugins"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vue"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// eslint-plugin-vue")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ul",[e("li",[e("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//github.com/babel/eslint-plugin-babel",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-plugin-babel"),e("OutboundLink")],1),t._v("：和 babel-eslint 一起使用的一款插件。babel-eslint 将 eslint 应用于 babel 方面做的很好，但是它不能更改内置的规则来支持实验特性。eslint-plugin-babel 重新实现了这些有问题的规则，因此不会误报一些错误信息。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//github.com/benmosher/eslint-plugin-import",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-plugin-import"),e("OutboundLink")],1),t._v("：该插件支持对 ES6+的 import/export 语法的校验，并防止一些文件路径拼写错误或者导入名称错误的情况。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//github.com/prettier/eslint-plugin-prettier",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-plugin-prettier"),e("OutboundLink")],1),t._v("：该插件辅助 ESLint 与 Prettier 一些协作，并将 prettier 的解析作为 ESLint 的一部分，在最后输出给出修改意见，这样当使用 prettier 格式化代码的时候，依然能够遵循 ESLint 的规则。如果你禁用掉了所有和代码格式化相关的 Eslint 规则，该插件可以更好得工作。因此你可以用 eslint-config-prettier 禁用掉所有的格式化相关的规则(如果其他有效的 Eslint 规则与 prettier 在代码如何格式化的问题上不一致的时候，报错是在所难免的了)。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//github.com/typescript-eslint/typescript-eslint/tree/master/packages/eslint-plugin",target:"_blank",rel:"noopener noreferrer"}},[t._v("@typescript-eslint/eslint-plugin"),e("OutboundLink")],1),t._v("：typescript 辅助 ESLint 的插件。此插件为 ESLint 校验 typescript 使用，所以需要使用 "),e("strong",[t._v("@typescript-eslint/parser")]),t._v("作为 ESLint 的解析器。")])]),t._v(" "),e("h3",{attrs:{id:"extends"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#extends"}},[t._v("#")]),t._v(" extends")]),t._v(" "),e("p",[t._v("extends 是已经配置好的规则，后面的 extends 会覆盖前面的 extends。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若项目中有多个子项目，且每个项目都会有.eslintrc，子项目会一直向上查找所有的.eslintrc，直到找到root:true的eslintrc，再将所有的.eslintrc合并")]),t._v("\n  root"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对环境定义的一组全局变量的预设")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//详细看：https://eslint.org/docs/user-guide/configuring/language-options#specifying-environments")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定脚本的运行环境。每种环境都有一组特定的预定义全局变量")]),t._v("\n  env"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 浏览器全局变量")]),t._v("\n    browser"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Node.js 全局变量和作用域")]),t._v("\n    node"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// CommonJS全局变量和CommonJS作用域")]),t._v("\n    commonjs"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启用除模块之外的所有ECMAScript 6功能")]),t._v("\n    es6"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将数据提供给每一个将被执行的规则")]),t._v("\n  settings"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    sharedData"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 继承另一个配置文件的所有特性")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint:recommended"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"plugin:@typescript-eslint/recommended"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插件，向ESLint添加各种扩展，可以定义规则，环境或配置的第三方模块")]),t._v("\n  plugins"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@typescript-eslint"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局变量")]),t._v("\n  globals"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false、readable、readonly 这 3 个是等价的，表示变量只可读不可写；")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true、writeable、writable 这 3 个是等价的，表示变量可读可写；")]),t._v("\n    $"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    console"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 解释器")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  Processor")]),t._v("\n  parser"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@typescript-eslint/parser"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 解释器的配置")]),t._v("\n  parserOptions"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 代码模块类型，可选script(默认)，module")]),t._v("\n    sourceType"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"module"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定ECMAScript版本，默认为5")]),t._v("\n    ecamVersion"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 额外的语言特性，所有选项默认都是 false")]),t._v("\n    ecmaFeatures"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否允许 return 语句出现在 global 环境下")]),t._v("\n      globalReturn"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否开启全局 script 模式")]),t._v("\n      impliedStrict"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否启用 JSX")]),t._v("\n      jsx"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否启用对实验性的objectRest/spreadProperties的支持")]),t._v("\n      experimentalObjectRestSpread"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 规则")]),t._v("\n  rules"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 禁止使用 alert")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no-alert"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"off"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 逗号前面没有空格 后面有空格")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"comma-spacing"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        before"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        after"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"parse"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parse"}},[t._v("#")]),t._v(" parse")]),t._v(" "),e("p",[t._v("parse 是用来定义 eslint 所使用的解析器，默认是使用 Espree🔗, 解析器的作用是将代码 code 转化成为一种 AST 抽象语法树，eslint 中叫 ESTree,你可以理解为将 code 翻译为 ESLint 能听 👂 懂的话")]),t._v(" "),e("p",[t._v("而常用的解析器还有包括以下几种")]),t._v(" "),e("p",[t._v("Esprima: 上文提到 espree 就是基于 Esprima 改良的\nBabel-esLint：一个对 Babel 解析器的包装，当你项目中使用了 babel，babel 的解析器会把你的 code 转换为 AST，然后该解析器会将其转换为 ESLint 能懂的 ESTree。这个目前我们应用的较多，目前也不再维护和更新，升级为@babel/eslint-parser\n@typescript-eslint/parser: 将 TypeScript 转换成与 estree 兼容的形式，以便在 ESLint 中使用。\n对于 AST 的模拟生成，感兴趣的同学可以使用 astexplorer 在线尝试\n上图我们通过上面这个配置例子，我们可以看到要么是 plugins:[]要么是 extends:[]，通过上图所示的配置二相对于配置一少了 parser, parserOptions 和 plugins 等的信息配置，但其实这两个配置最终实现的结果是一致的，这是因为配置二中定义的 extends：plugin:@typescript-eslint/recommended 会自动加载上叙提到的其他几个配置信息")]),t._v(" "),e("p",[t._v("总结：无论你使用那种解析器，本质是都是为了将 code 转换为 ESLint 能够阅读的语言 ESTree🔗")]),t._v(" "),e("h3",{attrs:{id:"parseoptions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parseoptions"}},[t._v("#")]),t._v(" parseOptions")]),t._v(" "),e("p",[t._v("parserOptions 参数是用来控制 parse 解析器, 主要包括以下几个属性 👇，我们挑重点的讲讲")]),t._v(" "),e("h2",{attrs:{id:"editorconfig"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#editorconfig"}},[t._v("#")]),t._v(" EditorConfig")]),t._v(" "),e("p",[t._v("首先，我们需要一个基本的规范，例如缩进，如何换行等等。它要适用于所有的团队，适用于所有的语言，适用于所有的编辑器。")]),t._v(" "),e("p",[e("code",[t._v("EditorConfig")]),t._v(" 能帮助我们实现这一点。它让所有的开发者在基本编码规范上保持一致。")]),t._v(" "),e("p",[e("strong",[t._v("我们需要做的是：")])]),t._v(" "),e("ol",[e("li",[t._v("安装 vscode "),e("code",[t._v("EditorConfig")]),t._v(" 插件（有些编辑器默认支持 "),e("code",[t._v("EditorConfig")]),t._v(" ，具体请看 这些编辑器不需要安装插件 (https://editorconfig.org/#pre-installed)）。")]),t._v(" "),e("li",[t._v("配置 "),e("code",[t._v(".editorconfig")]),t._v(" 文件。")])]),t._v(" "),e("h2",{attrs:{id:"stylelint"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#stylelint"}},[t._v("#")]),t._v(" StyleLint")]),t._v(" "),e("p",[t._v("在完成了以上的配置之后，我们已经可以对 "),e("code",[t._v(".js")]),t._v(" 文件、"),e("code",[t._v(".vue")]),t._v(" 文件的 "),e("code",[t._v("template")]),t._v(" 和 "),e("code",[t._v("script")]),t._v(" 模块实现代码规范和保存时自动格式化了。但是对于 "),e("code",[t._v(".css、.less、.scss")]),t._v(" 文件和 "),e("code",[t._v(".vue")]),t._v(" 文件的 "),e("code",[t._v("style")]),t._v(" 模块，我们还需要做额外的配置，否则样式部分不规范，我们也是没法检测并自动修复的。")]),t._v(" "),e("p",[e("strong",[t._v("我们需要做的是：")])]),t._v(" "),e("ol",[e("li",[e("code",[t._v("npm i stylelint stylelint-config-standard stylelint-scss")]),t._v("。")]),t._v(" "),e("li",[t._v("安装 "),e("code",[t._v("Stylelint插件")]),t._v("。")]),t._v(" "),e("li",[t._v("配置 "),e("code",[t._v(".stylelintrc")]),t._v(" 文件。")]),t._v(" "),e("li",[t._v("配置 VSCode 的 "),e("code",[t._v("setting.json")]),t._v(" 文件。")])]),t._v(" "),e("h2",{attrs:{id:"配置原则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置原则"}},[t._v("#")]),t._v(" 配置原则")]),t._v(" "),e("ul",[e("li",[t._v("eslint 主要负责语法部分的规则")]),t._v(" "),e("li",[t._v("code formatter 主要负责代码风格")]),t._v(" "),e("li",[t._v("code formatter 和 eslint 的规则冲突时，优先使用 formatter 的规则")])]),t._v(" "),e("h2",{attrs:{id:"vscode-插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vscode-插件"}},[t._v("#")]),t._v(" VSCODE 插件")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://segmentfault.com/img/bVcVYLa",alt:""}})]),t._v(" "),e("p",[t._v("该插件使得在编写代码时可以直接看到错误的地方提示")]),t._v(" "),e("h2",{attrs:{id:"项目配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#项目配置"}},[t._v("#")]),t._v(" 项目配置")]),t._v(" "),e("p",[t._v("我们采用 prettier 格式化代码格式，eslint 校验代码质量，lint-staged 保存代码时做 eslint 校验和热修复，husky 增强 commit 和 push 代码的质量，ts 也使用 eslint 做校验")]),t._v(" "),e("h2",{attrs:{id:"prettier-与-eslint-集成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#prettier-与-eslint-集成"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://prettier.io/docs/en/comparison.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Prettier 与 Eslint 集成"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://www.kancloud.cn/cyyspring/webpack/2015917",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何解决 eslint 和 prettier 的冲突"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://prettier.io/docs/en/integrating-with-linters.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("prettier 与 lint 集成"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[t._v("两者的差异")]),t._v(" "),e("ul",[e("li",[t._v("eslint 是代码质量检查，formatter 是代码格式优化，两种是不同的分工，\n，由于 eslint 包含部分 formatter 职责，eslint 使用命令行 fix 修复，formatter 使用 vscode 快捷键修复，由于两者都可以自动在保存都时候修复，如果两者在保存都时候都修复，会引起冲突")]),t._v(" "),e("li",[t._v("eslint 的优先级高于 formatter，如果要执行，需要先 formatter 再使用 eslint 保存")])])]),t._v(" "),e("li",[e("p",[t._v("使用 eslint plugin 处理冲突相关库")]),t._v(" "),e("ul",[e("li",[t._v("eslint-config-pretty\n"),e("ul",[e("li",[t._v("禁用所有与 pretty 冲突的 eslint 配置")])])]),t._v(" "),e("li",[t._v("eslint-plugin-pretty\n"),e("ul",[e("li",[t._v("将 pretty 的错误集成到 eslint，实现 pretty 作为 eslint 错误报错")])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://prettier.io/docs/en/cli.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("prettier cli"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[e("code",[t._v("prettier --write .")]),t._v(" 执行 prettier 命令修复项目，类似于 "),e("code",[t._v("eslint --fix")])])])])])])]),t._v(" "),e("h3",{attrs:{id:"prettier-配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#prettier-配置"}},[t._v("#")]),t._v(" prettier 配置")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  printWidth"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每行代码长度（默认80）")]),t._v("\n  tabWidth"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每个tab相当于多少个空格（默认2）")]),t._v("\n  useTabs"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否使用tab进行缩进（默认false）")]),t._v("\n  singleQuote"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用单引号（默认false）")]),t._v("\n  semi"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明结尾使用分号(默认true)")]),t._v("\n  trailingComma"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'es5'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 多行使用拖尾逗号（默认none）")]),t._v("\n  bracketSpacing"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对象字面量的大括号间使用空格（默认true）")]),t._v("\n  jsxBracketSameLine"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 多行JSX中的>放置在最后一行的结尾，而不是另起一行（默认false）")]),t._v("\n  arrowParens"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'avoid'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只有一个参数的箭头函数的参数是否带圆括号（默认avoid）")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"参考链接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://juejin.cn/post/7028754877312401444",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入浅出之 ESLint"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://cn.eslint.org/docs/rules/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ESlint 规则列表"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.cnblogs.com/zhangycun/p/10762534.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("基本配置"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1896199",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用这些配置规范并格式化你的代码"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);