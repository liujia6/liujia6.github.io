import{_ as e,c as l,o as i,a}from"./app-BYS36vur.js";const t={},r=a('<h1 id="vue-中-key-值的作用" tabindex="-1"><a class="header-anchor" href="#vue-中-key-值的作用"><span>vue 中 key 值的作用</span></a></h1><p>首先看下官方文档中对 key 值的介绍</p><ul><li><a href="https://cn.vuejs.org/v2/api/#key" title="key" target="_blank" rel="noopener noreferrer">key</a></li><li><a href="https://cn.vuejs.org/v2/guide/list.html#%E7%BB%B4%E6%8A%A4%E7%8A%B6%E6%80%81" title="维护状态" target="_blank" rel="noopener noreferrer">维护状态</a></li></ul><h2 id="理解" tabindex="-1"><a class="header-anchor" href="#理解"><span>理解</span></a></h2><ul><li>维护状态 <ul><li>如果在列表循环中不为子节点加 key 值属性，vue 会采用就地复用的策略， <ul><li>就地复用的策略就是例如你在列表中插入了一个元素，原来的对应顺序（位置）上的元素都不会更新，只会更新数据变化，将多余的末尾元素直接删除，具体请看<a href="https://www.zhihu.com/question/61064119" target="_blank" rel="noopener noreferrer">Vue2.0 v-for 中 :key 到底有什么用？</a></li></ul></li></ul></li><li>key 值原理 <ul><li>当 vue 在判断两个节点是否是同一个节点的时候，首先会比较 key 值，如果两个元素 key 值一致，则表示是同一个元素，则可以对改元素执行 dom 更新变化，如果 key 不相同，则认为是一个新的节点</li><li>key 值不相同的 dom 结构，被认为是不同的节点，如果修改 dom 的 key，vue 会认为是一个新的节点，会 unMount 原来的节点并删除，并重新渲染 key 值所在的节点</li><li>当该节点被 transition 包围时，元素 key 值的改变，相当于元素变化 v-if，会引发过渡动画的效果</li></ul></li></ul><h2 id="实践" tabindex="-1"><a class="header-anchor" href="#实践"><span>实践</span></a></h2><ol><li>当 for 循环有状态的组件，key 值必须唯一 <ul><li>如果用index绑定key，那么在组件有状态data时会造成更新问题</li></ul></li><li>当我们需要重新渲染某个组件，重置状态时，只需绑定唯一 key 值，当 key 值变化，组件就会重新渲染并重置状态 <ul><li>如果不清楚key值的使用，通常会想到用 v-if 配合 nextTick 实现，根本不必如此麻烦，完全可以用key值标识组件，而不是只有在循环中需要使用key</li></ul></li></ol><h3 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h3><ul><li><a href="https://www.zhihu.com/question/61064119" target="_blank" rel="noopener noreferrer">Vue2.0 v-for 中 :key 到底有什么用？</a></li></ul>',9),n=[r];function o(s,u){return i(),l("div",null,n)}const k=e(t,[["render",o],["__file","key值.html.vue"]]),c=JSON.parse('{"path":"/Vue/key%E5%80%BC.html","title":"vue 中 key 值的作用","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"理解","slug":"理解","link":"#理解","children":[]},{"level":2,"title":"实践","slug":"实践","link":"#实践","children":[{"level":3,"title":"参考","slug":"参考","link":"#参考","children":[]}]}],"git":{"updatedTime":1717615253000,"contributors":[{"name":"liujia6","email":"liujia11@qianxin.com","commits":1}]},"filePathRelative":"Vue/key值.md"}');export{k as comp,c as data};
