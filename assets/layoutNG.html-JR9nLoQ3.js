import{_ as e,c as t,o as a,a as o}from"./app-BrW2q7b4.js";const r={},n=o('<h3 id="layoutng介绍" tabindex="-1"><a class="header-anchor" href="#layoutng介绍"><span><a href="https://zhuanlan.zhihu.com/p/37847490" target="_blank" rel="noopener noreferrer">LayoutNG介绍</a></span></a></h3><p>参考： https://docs.google.com/document/d/1uxbDh4uONFQOiGuiumlJBLGgO4KDWB8ZEkp7Rd47fw4/edit#heading=h.guvbepjyp0oj</p><p>layout tree只是结合了dom tree和compuedStyle，并没有计算出每个layout object的具体在屏幕上的物理位置，之前是直接将更新结果更新在layout tree上，通过layoutNG，我们将布局输出，放在NGPhysicalFragment上面，从而实现了layout的输入与输出分离</p><img src="https://i.loli.net/2021/01/13/MYtPWRQ9fF3p1hK.png" alt="image-20210113183808157" style="zoom:50%;"><p>NGPaintFragments是：</p><ul><li>一成不变的</li><li>所有坐标都是物理的。参见<a href="https://chromium.googlesource.com/chromium/src/+/master/third_party/blink/renderer/core/layout/layout_box_model_object.h" target="_blank" rel="noopener noreferrer">layout_box_model_object.h</a>。</li><li>NGFragment具有Offset（）而不是Location（），它是与父片段的物理偏移量。</li></ul><h4 id="css-fragmentation" tabindex="-1"><a class="header-anchor" href="#css-fragmentation"><span><strong>CSS Fragmentation</strong></span></a></h4><p>CSS Fragment中，把一个paged media（比如图片，幻灯片）、分成众多fragments，如果paged media中间出现了一些障碍物如文字，排版能正常排开。下面例子，<strong>中间部分为Fragment</strong>，在改变了尺寸后，以及滚动后，可能的效果。</p><img src="https://pic2.zhimg.com/80/v2-11b044653e288d520a32773c43b9a501_720w.jpg" alt="img" style="zoom:50%;"><h4 id="ngfragment" tabindex="-1"><a class="header-anchor" href="#ngfragment"><span><strong>NGFragment</strong></span></a></h4><p>NGFragment是CSS Fragment在LayoutNG中的形式。任何CSS Box都可以生成NGFragment（一可能对多）。特别是文字节点在换行的时候。文字的时候NGFragment为NGText。这里还有个NGBreakToken的概念，当一个CSS Box生成了N个NGFragments，如果他还需要继续Fragment，那么就会有N个NGBreakTokens。</p><h4 id="ngconstraintspace" tabindex="-1"><a class="header-anchor" href="#ngconstraintspace"><span><strong>NGConstraintSpace</strong></span></a></h4><p>每个NGFragment存在一个叫NGConstraintSpace的地方，表示当前排版的可用空间和不可用空间。不可用空间存的东西为NGExclution，可用空间存的东西即NGFragment。整个Layout就是在NGConstraintSpace里面完成的。</p><p>下图为一个NGConstraintSpace的例子，里面有三个NGExclutions以及一个NGFragment。</p><img src="https://pic4.zhimg.com/80/v2-397e2a4ea830f3cdba40e04722908db7_720w.jpg" alt="img" style="zoom:50%;"><p>一个新的NGConstraintSpace可以由一个旧的NGConstraintSpace生成，目的是方便接下来儿子的排版。</p><img src="https://pic1.zhimg.com/80/v2-1f29faff0678db5f134d88d19dacc35c_720w.jpg" alt="img" style="zoom:50%;"><p>NGLayout Tree（LayoutNG Tree/Fragment Tree）</p><img src="https://pic1.zhimg.com/80/v2-6a28a56f47f42d6fecae58cb70b13b08_720w.jpg" alt="img" style="zoom:50%;"><p>这里说到的NGLayout Tree是由Legacy Tree转变来的。Legacy Tree是指以前老的Layout Tree。NGLayout Tree并不是从Legacy Tree慢慢过渡来的，而是直接建立出NGLayout Tree。</p>',20),s=[n];function i(c,l){return a(),t("div",null,s)}const g=e(r,[["render",i],["__file","layoutNG.html.vue"]]),p=JSON.parse('{"path":"/%E6%B5%8F%E8%A7%88%E5%99%A8/layoutNG.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"LayoutNG介绍","slug":"layoutng介绍","link":"#layoutng介绍","children":[]}],"git":{"updatedTime":1717649313000,"contributors":[{"name":"Liu Jia","email":"41950983+liujia6@users.noreply.github.com","commits":1}]},"filePathRelative":"浏览器/layoutNG.md"}');export{g as comp,p as data};
