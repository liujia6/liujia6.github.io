import{_ as n,c as a,o as l,a as s}from"./app-CVfBBX0w.js";const e={},i=s(`<h1 id="plantuml" tabindex="-1"><a class="header-anchor" href="#plantuml"><span>plantuml</span></a></h1><h2 id="是什么" tabindex="-1"><a class="header-anchor" href="#是什么"><span>是什么</span></a></h2><p>在产品分析和代码设计过程中需要用图形去表达和沟通，plantuml是一款用代码描述UML图形的工具。</p><h2 id="图形" tabindex="-1"><a class="header-anchor" href="#图形"><span>图形</span></a></h2><ul><li><a href="http://www.uml.org.cn/oobject/202012304.asp?artid=23534" target="_blank" rel="noopener noreferrer">用例图</a><ul><li>用例图是用来描述系统所需功能的</li><li>使用用例图根据用户的业务活动<strong>梳理系统功能</strong>，可以减少遗漏<br><img src="https://cdn.nlark.com/yuque/0/2023/png/2198140/1682265139166-21b763bb-48e6-4c62-9ae9-2ef33c5882c3.png" alt=""></li></ul></li><li>状态图 <ul><li>说明某个事物<strong>状态转换逻辑</strong>，尤其是事物多状态的场景</li><li>用于梳理复杂的状态逻辑</li><li>要素 <ul><li>节点是状态</li><li>连线是动作</li></ul></li></ul></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2198140/1678981087524-a914f37d-040f-4e0a-aa68-2357ee345fc4.png" alt=""></p><ul><li>时序图 <ul><li>描述<strong>多个对象</strong>之间的<strong>交互，跟泳道图的区别在于更加常用语描述逻辑而不是操作流程</strong></li><li>常用于描述前后端逻辑交互，需要多端配合交互的功能</li><li>强调<strong>交互</strong></li></ul></li><li>活动图 <ul><li>描述系统内某个用例或者流程的操作活动流程</li><li>本质上是个流程图，描述活动的序列，即系统从一个活动到另外一个活动到控制流</li><li>目的在于**表达“流程完整性”**而非活动细节，强调流程和逻辑判断</li><li>要素 <ul><li>节点是行为</li><li>连线是下一步的逻辑判断</li></ul></li></ul></li><li>泳道图 <ul><li><strong>多角色、多系统</strong>的活动图，更加清晰活动的所属角色</li></ul></li><li>类图（ER 图） <ul><li>描述系统内物体概念的逻辑关系</li><li><strong>分析业务概念</strong></li><li><strong>分析代码架构</strong></li><li>描述系统内代码模块的逻辑关系 <img src="https://cdn.nlark.com/yuque/0/2023/png/2198140/1682650585040-33985dd9-e338-487a-a235-0a9fa011211a.png" alt=""></li></ul></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2023/png/2198140/1678978358743-7e3c004d-c0a4-471d-b322-6a9d85a557a3.png" alt=""><img src="https://cdn.nlark.com/yuque/0/2023/png/2198140/1679932917418-0bd94f35-36b7-4369-8d3d-239345a00c6b.png" alt=""></p><div class="language-plantuml line-numbers-mode" data-highlighter="prismjs" data-ext="plantuml" data-title="plantuml"><pre class="language-plantuml"><code><span class="line"><span class="token delimiter punctuation">@startuml</span> class-relations-1</span>
<span class="line"></span>
<span class="line">Driver -- Car <span class="token punctuation">:</span> drives（关联） &gt;</span>
<span class="line">Car <span class="token arrow operator">*--</span> Wheel <span class="token punctuation">:</span> have 4 （包含，组合） &gt; </span>
<span class="line">Car -- Person <span class="token punctuation">:</span> &lt; owns（关联）</span>
<span class="line">Folder <span class="token arrow operator">o--</span> File <span class="token punctuation">:</span> contains <span class="token punctuation">(</span>aggregation，聚合<span class="token punctuation">)</span> &gt;</span>
<span class="line">Department <span class="token arrow operator">o--</span> Employee <span class="token punctuation">:</span> contains &gt;</span>
<span class="line"></span>
<span class="line"><span class="token delimiter punctuation">@enduml</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="确定产品核心功能流程" tabindex="-1"><a class="header-anchor" href="#确定产品核心功能流程"><span>确定产品核心功能流程</span></a></h2><ul><li><p>是什么</p><ul><li>产品对用户产生的价值的最简操作步骤</li></ul></li><li><p>怎么做</p><ul><li><p>研究调研已有的产品常规流程</p></li><li><p>如果是全新的义务功能流程（尤其是企业内部支撑系统）</p></li><li><p>要求精通业务流程的义务方讲解一遍业务流程</p></li><li><p>调研具体操作的人，验证是否有偏差</p></li><li><p>实地观察和记录</p></li><li><p>梳理结论</p></li><li><p>明确业务流程范围、包含的功能模块、涉及的用户和角色</p></li></ul></li></ul><h2 id="uml-实践" tabindex="-1"><a class="header-anchor" href="#uml-实践"><span>uml 实践</span></a></h2><p>业务设计阶段</p><ol><li>定义业务流程（有哪些流程和功能），定义系统范围（用例）</li><li>梳理业务具体流程（活动图/泳道图）</li><li>根据活动图梳理系统功能（用例图）</li><li>定义系统规则（状态图）</li><li>定义静态结构（类图）</li><li>定义操作方法（序列图）</li></ol><p>开发阶段</p><ol><li>架构图</li><li>组件图</li><li>类图</li></ol><h2 id="工具网站" tabindex="-1"><a class="header-anchor" href="#工具网站"><span>工具网站</span></a></h2><ol><li><a href="https://niolesk.top/#https://kroki.io/plantuml/svg/eNpzKC5JLCopzc3hSs5JLC5WcClNzq7mUgACbYXgkqLMvHSFksySnFSFF_tnPpuxvqAov6AYLK0Lk05JLEmEyoKYz6ZueNa7DmpCcWlSbmaJhiZU_tm0nc82T4XJ5eSXFOulpKYlluaUaIC0aio865_wZN9sqNjL3TNerFvyrH_Ss-V73-_pQeZC1SGsq-VySM1LAXoDAK5eYQU=" target="_blank" rel="noopener noreferrer">聚合在线 uml 图形编辑</a></li><li><a href="https://www.edrawmax.cn/templates/5019/1/0" target="_blank" rel="noopener noreferrer">时序图模板</a></li><li><a href="https://www.umletino.com/umletino.html" target="_blank" rel="noopener noreferrer">uml 在线画图工具</a></li><li><a href="https://mermaid.live/edit#pako:eNptkstKw0AUhl9lGBBatT5AcSNWwYUrdxKQaTLqYDJTMhNEq6B4ofVCi1DxhiuxFaVaC6K26st0JnXlKziJMVYxm5z58_9fzhlOHprMwjANTRtxniFozkWOQfv6QHf9RJYLH-297tqlLtRaVb4WZPtZK53HfVm6lYVtWbw3KNDPCCUOssFwKgUynrkAQoLf2vxLaDf0UZY33zdqOu7v3vjXu78I_ZowTvh8BKiq4pvcavrNVpA7q_mFB03ttB46jzuqeCUbFdk4D8AHe-rwSTUrv9tZ0bRpnHXRlxzOGDaYB18KAANgSriEzoEsRgujzGYu6L4dq6PbnMty_NuV-nYJzEUGCRSZLF2qyp3ar__w-CJxEsnI0NtV-NFmgg9ZeBZ5tkgE8SRQpXLn9TTS3ltH3fqFKh2o6oueufcY-f78crV3tuDq8nHThArAyTKeoOMYi1g2ER1DIpH8Jx9eVgwYyDJmA8JnFoltxaLr0TgLB6GDXQcRS69QmDOgmMcONmBal9FMBjRoYEWeYFNL1ITpWWRzPAi9nJ4GR1sXq9gigrmT0V4Gr9VPZrwkRQ" target="_blank" rel="noopener noreferrer">mermaid 在线网址</a></li><li><a href="https://real-world-plantuml.com/?type=class" target="_blank" rel="noopener noreferrer">Real World PlantUML</a></li><li><a href="https://excalidraw.com/" target="_blank" rel="noopener noreferrer">Excalidraw — Collaborative whiteboarding made easy</a></li></ol><h2 id="画图工具选择" tabindex="-1"><a class="header-anchor" href="#画图工具选择"><span>画图工具选择</span></a></h2><p>主要有两种自动生成图形的画图工具</p><ol><li>plantuml <ol><li>优点：功能强大</li><li>缺点：使用麻烦，基于 java 开发</li></ol></li><li>mermaid <ol><li>优点：基于 js，大部分 mardown 软件内置支持渲染</li><li>缺点：常见图形可以实现，功能没有 plantuml 强大</li></ol></li></ol><p>个人推荐使用 plantuml，可以使用 markText 软件绘图查看，也可根据需求自行选择</p><ul><li>简单的图形可以用 mermaid 或者 plantuml 实现</li><li>图形都可以用 mermaid 直接画，mermaid 支持良好，以 mermaid 举例，plantuml 同样的道理</li><li><a href="https://mermaid.live/edit#pako:eNptkstKw0AUhl9lGBBatT5AcSNWwYUrdxKQaTLqYDJTMhNEq6B4ofVCi1DxhiuxFaVaC6K26st0JnXlKziJMVYxm5z58_9fzhlOHprMwjANTRtxniFozkWOQfv6QHf9RJYLH-297tqlLtRaVb4WZPtZK53HfVm6lYVtWbw3KNDPCCUOssFwKgUynrkAQoLf2vxLaDf0UZY33zdqOu7v3vjXu78I_ZowTvh8BKiq4pvcavrNVpA7q_mFB03ttB46jzuqeCUbFdk4D8AHe-rwSTUrv9tZ0bRpnHXRlxzOGDaYB18KAANgSriEzoEsRgujzGYu6L4dq6PbnMty_NuV-nYJzEUGCRSZLF2qyp3ar__w-CJxEsnI0NtV-NFmgg9ZeBZ5tkgE8SRQpXLn9TTS3ltH3fqFKh2o6oueufcY-f78crV3tuDq8nHThArAyTKeoOMYi1g2ER1DIpH8Jx9eVgwYyDJmA8JnFoltxaLr0TgLB6GDXQcRS69QmDOgmMcONmBal9FMBjRoYEWeYFNL1ITpWWRzPAi9nJ4GR1sXq9gigrmT0V4Gr9VPZrwkRQ" target="_blank" rel="noopener noreferrer">mermaid 在线网址</a></li><li>点击打开观察以上网址https://mermaid.live/edit#是mermaid在线编辑网站，后面的是uml图形的编码</li><li>在可支持 mermaid 的 mardown 文件中使用可以直接用文字预览</li><li>如果是在非 markdown 文件中需要编写 mermaid 图形，可以使用 mermaid 在线 editor 服务的图形编码生成的图片编码，这样方便修改</li><li>复杂的图形</li><li>例如泳道图</li><li>涉及多角色，多平台的用 draw.io 或者<a href="https://www.processon.com/diagrams" target="_blank" rel="noopener noreferrer">processon</a>画，</li><li>也可以用在线生成文件再导出到在线画图软件调整布局</li><li>架构图，包图，用<a href="https://excalidraw.com/" target="_blank" rel="noopener noreferrer">https://excalidraw.com/</a>画</li></ul><h2 id="vue-组件示例" tabindex="-1"><a class="header-anchor" href="#vue-组件示例"><span>vue 组件示例</span></a></h2><div class="language-plantuml line-numbers-mode" data-highlighter="prismjs" data-ext="plantuml" data-title="plantuml"><pre class="language-plantuml"><code><span class="line"><span class="token keyword">class</span> operation <span class="token punctuation">{</span></span>
<span class="line">  + String desc</span>
<span class="line">  + getValues<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  __ slots __</span>
<span class="line">  default<span class="token punctuation">:</span> 内容</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">note</span> left<span class="token punctuation">:</span> vue组件标准class类型</span>
<span class="line"><span class="token keyword">file</span> id <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">component</span> sumarry <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">class</span> operation <span class="token punctuation">{</span></span>
<span class="line">            __ props __</span>
<span class="line">            __ methods __</span>
<span class="line">            __ slots __</span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">component</span> disposeResult <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">component</span> description<span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">component</span> attackPathMap <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><p><a href="https://www.woshipm.com/pmd/183238.html" target="_blank" rel="noopener noreferrer">产品必修课——轻松搞定 UML | 人人都是产品经理</a></p><p><a href="http://www.uml.org.cn/oobject/OObject.asp#9" target="_blank" rel="noopener noreferrer">UML 基础-火龙果软件工程</a></p><p><a href="http://www.uml.org.cn/modeler/202108052.asp" target="_blank" rel="noopener noreferrer">基于 UML 的需求分析和系统设计</a></p>`,29),t=[i];function p(r,o){return l(),a("div",null,t)}const u=n(e,[["render",p],["__file","plantuml.html.vue"]]),d=JSON.parse('{"path":"/%E7%BC%96%E7%A8%8B/plantuml.html","title":"plantuml","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"是什么","slug":"是什么","link":"#是什么","children":[]},{"level":2,"title":"图形","slug":"图形","link":"#图形","children":[]},{"level":2,"title":"确定产品核心功能流程","slug":"确定产品核心功能流程","link":"#确定产品核心功能流程","children":[]},{"level":2,"title":"uml 实践","slug":"uml-实践","link":"#uml-实践","children":[]},{"level":2,"title":"工具网站","slug":"工具网站","link":"#工具网站","children":[]},{"level":2,"title":"画图工具选择","slug":"画图工具选择","link":"#画图工具选择","children":[]},{"level":2,"title":"vue 组件示例","slug":"vue-组件示例","link":"#vue-组件示例","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"updatedTime":1717649313000,"contributors":[{"name":"Liu Jia","email":"41950983+liujia6@users.noreply.github.com","commits":1}]},"filePathRelative":"编程/plantuml.md"}');export{u as comp,d as data};
